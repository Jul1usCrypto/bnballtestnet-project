{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web3 Work Space\\\\Gasha\\\\BNBALL\\\\src\\\\App.js\";\nimport \"./styles.css\";\nimport M from \"materialize-css\";\nimport { Button, Row, Card, Collapsible } from \"react-materialize\";\nimport React, { Component } from \"react\";\nimport MintComponent from \"./MintComponent\";\nimport { web3_eth, BatchRequest, NFTContract } from \"./Common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryPostfix = \"/nft?chain=0x61&format=decimal&limit=100&token_addresses%5B0%5D=\" + NFTContract + \"&media_items=false\";\nlet contractMethods = new web3_eth.Contract([{\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"id\",\n    type: \"uint256\"\n  }],\n  name: \"getVariant\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256[100]\",\n    name: \"tokens\",\n    type: \"uint256[100]\"\n  }, {\n    internalType: \"address\",\n    name: \"rewardsReceiver\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"burnCollection1\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256[20]\",\n    name: \"tokens\",\n    type: \"uint256[20]\"\n  }, {\n    internalType: \"uint256\",\n    name: \"minimumJackpot\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"rewardsReceiver\",\n    type: \"address\"\n  }],\n  name: \"burnCollection2\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}], NFTContract).methods;\nconst GetNFTVariant = contractMethods.getVariant;\nconst GetTokenURI = contractMethods.tokenURI;\nconst {\n  burnCollection1,\n  burnCollection2\n} = contractMethods;\ncontractMethods = undefined;\nconst variantsCache = {};\nconst tokenUriCache = {};\nconst imageCache = {};\nconst simpleModal = {};\nconst htmlspecialchars = function () {\n  const mapObj = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#039;\"\n  };\n  const re = new RegExp(Object.keys(mapObj).join(\"|\"), \"gi\");\n  return function (str) {\n    return str.replace(re, function (matched) {\n      return mapObj[matched.toLowerCase()];\n    });\n  };\n}();\nconst safetoast = function (text) {\n  M.toast({\n    html: htmlspecialchars(text)\n  });\n};\nconst fasttoast = function (text) {\n  M.toast({\n    html: text\n  });\n};\nconst injected = window.ethereum;\nconst sendTransaction = injected ? function (data) {\n  return injected.request({\n    method: \"eth_sendTransaction\",\n    params: [{\n      from: injected.selectedAddress,\n      to: NFTContract,\n      data: data,\n      chainId: \"0x61\"\n    }]\n  });\n} : undefined;\nclass ModalExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentHeader: \"\",\n      currentBody: \"\"\n    };\n    this.NFTListLOCK = false;\n  }\n  componentDidMount() {\n    simpleModal.show = this.showModal.bind(this);\n    Object.freeze(this.simpleModal);\n  }\n  showModal(header, body) {\n    this.setState({\n      currentHeader: htmlspecialchars(header),\n      currentBody: htmlspecialchars(body)\n    }, () => {\n      const elem = document.getElementById(\"theModal\");\n      const instance = M.Modal.init(elem);\n      instance.open();\n    });\n  }\n  render() {\n    const {\n      currentHeader,\n      currentBody\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: \"theModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          color: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: currentHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          className: \"modal-close waves-effect waves-green btn-flat\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass NftCard extends Component {\n  constructor(props) {\n    super(props);\n    this.nftid = props.nftid;\n    this.variant = props.variant;\n    this.state = {\n      img: undefined\n    };\n  }\n  async componentDidMount() {\n    try {\n      const id = this.nftid;\n      let uri = tokenUriCache[id];\n      if (!uri) {\n        uri = await GetTokenURI(id).call();\n        tokenUriCache[id] = uri;\n      }\n      if (uri && typeof uri === \"string\") {\n        let http = uri.startsWith(\"ipfs://\") ? \"https://ipfs.io/ipfs/\" + uri.slice(7) : uri;\n        const cached = imageCache[http];\n        if (cached) {\n          this.setState({\n            img: cached\n          });\n          return;\n        }\n        const res = await fetch(http);\n        const meta = await res.json();\n        let img = (meta === null || meta === void 0 ? void 0 : meta.image) || (meta === null || meta === void 0 ? void 0 : meta.image_url);\n        if (img && typeof img === \"string\") {\n          if (img.startsWith(\"ipfs://\")) img = \"https://ipfs.io/ipfs/\" + img.slice(7);\n          imageCache[http] = img;\n          this.setState({\n            img\n          });\n        }\n      }\n    } catch (e) {\n      // ignore, fallback to variant sprite\n    }\n  }\n  render() {\n    const {\n      nftid,\n      variant\n    } = this;\n    const {\n      img\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col s6 l3\",\n      title: \"NFT #\" + nftid,\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        crossOrigin: \"anonymous\",\n        alt: \"\",\n        src: img || \"nft-\" + variant + \".png\",\n        style: {\n          width: \"100%\"\n        },\n        className: \"card-content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-action\",\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: \"100%\",\n          display: \"block\"\n        },\n        children: \"trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass NFTList extends Component {\n  constructor(props) {\n    var _props$minjackpot;\n    super(props);\n    this.addy = props.addy;\n    this.state = {\n      nftlist: null,\n      claimLegendarySets: 1\n    };\n    this.minjackpot = (_props$minjackpot = props.minjackpot) !== null && _props$minjackpot !== void 0 ? _props$minjackpot : \"1\";\n    this.NFTListLOCK = false;\n  }\n  async refreshNFTListLoop() {\n    const {\n      addy\n    } = this;\n    if (!addy || this.NFTListLOCK) {\n      return;\n    }\n    this.NFTListLOCK = true;\n    try {\n      const nftlist = [];\n      let cursor = undefined;\n      while (true) {\n        const xhr = new XMLHttpRequest();\n        const query1 = \"https://deep-index.moralis.io/api/v2/\" + addy + queryPostfix;\n        xhr.open(\"GET\", cursor ? query1 + \"&cursor=\" + cursor : query1, true);\n        xhr.setRequestHeader(\"accept\", \"application/json\");\n        xhr.setRequestHeader(\"X-API-Key\", \"pIPuzImDyQXnJmUAmA0MrBWw87WFwtv7GLVAy9mXnarIp8lSLDmwDpMmDfEOEhoJ\");\n        const fatnftlist = JSON.parse(await new Promise(function (resolve, reject) {\n          xhr.onload = function () {\n            const {\n              status,\n              responseText\n            } = xhr;\n            if (status > 199 && status < 300) {\n              resolve(responseText);\n            } else {\n              try {\n                const errortext = JSON.parse(responseText).message;\n                fasttoast(\"Unable to fetch NFT collection: \" + htmlspecialchars(errortext));\n                reject(\"Moralis API call failed: \" + errortext);\n              } catch (e) {\n                reject(e);\n              }\n            }\n          };\n          xhr.onerror = reject;\n          xhr.send();\n        }));\n        for (const {\n          token_id\n        } of fatnftlist.result) {\n          nftlist.push(token_id);\n        }\n        cursor = fatnftlist.cursor;\n        if (!cursor) {\n          break;\n        }\n      }\n      await new Promise(function (completer, rejecter) {\n        let ctr = 0;\n        const batch = new BatchRequest();\n        let target = 0;\n        for (const nftid2 of nftlist) {\n          if (variantsCache[nftid2] === undefined) {\n            batch.add(GetNFTVariant(nftid2).call.request({}, function (error, result) {\n              if (error) {\n                rejecter(error);\n              } else {\n                const asint = parseInt(result, 10);\n                if (asint > 0) {\n                  variantsCache[nftid2] = asint.toString();\n                }\n                if (target === ++ctr) {\n                  completer();\n                }\n              }\n            }));\n          }\n        }\n        target = batch.requests.length;\n        if (target > 0) {\n          batch.execute();\n        } else {\n          completer();\n        }\n      });\n      this.setState({\n        nftlist: nftlist\n      });\n    } catch (_unused) {\n      // swallow; toast already shown upstream when possible\n    } finally {\n      this.NFTListLOCK = false;\n    }\n  }\n  componentDidMount() {\n    const thefun = this.refreshNFTListLoop.bind(this);\n    this.interval = setInterval(thefun, 10000);\n    thefun();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      nftlist\n    } = this.state;\n    const {\n      addy,\n      minjackpot\n    } = this;\n    if (nftlist === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        style: {\n          backgroundColor: \"#FFAAC9\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"black\",\n            width: \"100%\"\n          },\n          children: \"Loading collection...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indeterminate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this);\n    }\n    const nftlist2 = {};\n    for (const id of nftlist) {\n      const variant = variantsCache[id];\n      const nestedlist = nftlist2[variant];\n      if (nestedlist) {\n        nestedlist.push(id);\n      } else {\n        nftlist2[variant] = [id];\n      }\n    }\n    const rngqueue = nftlist2[\"undefined\"];\n    delete nftlist2[\"undefined\"];\n    const entries = Object.entries(nftlist2);\n    const legendaryList = [];\n    const commonList = [];\n    let commonCount = 0;\n    let legendaryCount = 0;\n    for (const relation of entries) {\n      let list3;\n      const len6 = relation[1].length;\n      if (relation[0] > 20) {\n        list3 = legendaryList;\n        legendaryCount += len6;\n      } else {\n        list3 = commonList;\n        commonCount += len6;\n      }\n      list3.push(relation);\n    }\n    // Build maps for faster lookups\n    const commonMap = {};\n    for (const [variantKey, ids] of commonList) {\n      commonMap[variantKey] = ids;\n    }\n    const legendaryMap = {};\n    for (const [variantKey, ids] of legendaryList) {\n      legendaryMap[variantKey] = ids;\n    }\n\n    // Select exactly 5 of each common variant (1..20)\n    let legendaryBurnList = [];\n    for (let v = 1; v <= 20; v++) {\n      const arr = commonMap[v];\n      if (!arr || arr.length < 5) {\n        legendaryBurnList = undefined;\n        break;\n      }\n      for (let i = 0; i < 5; i++) legendaryBurnList.push(arr[i]);\n    }\n    // compute how many full legendary claim sets are available (5 of each common)\n    let maxSets = Infinity;\n    for (let v = 1; v <= 20; v++) {\n      const arr = commonMap[v] || [];\n      const sets = Math.floor(arr.length / 5);\n      if (sets < maxSets) maxSets = sets;\n    }\n    if (maxSets === Infinity) maxSets = 0;\n\n    // Select exactly 1 of each legendary variant (21..40)\n    let jackpotBurnList = [];\n    for (let v = 21; v <= 40; v++) {\n      const arr = legendaryMap[v];\n      if (!arr || arr.length < 1) {\n        jackpotBurnList = undefined;\n        break;\n      }\n      jackpotBurnList.push(arr[0]);\n    }\n    const jackpotBurnABI = jackpotBurnList && jackpotBurnList.length === 20 ? burnCollection2(jackpotBurnList, minjackpot, addy).encodeABI() : undefined;\n    jackpotBurnList = undefined;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App row\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"col s12\",\n        style: {\n          margin: 0,\n          display: \"flex\",\n          alignItems: \"flex-end\",\n          width: \"100%\",\n          flexWrap: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"col s12 m6\",\n          style: {\n            marginLeft: \"-10px\",\n            paddingLeft: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s12\",\n            style: {\n              display: \"flex\",\n              gap: 8,\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: \"Legendary sets:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              style: {\n                minWidth: 36,\n                padding: \"0 10px\"\n              },\n              onClick: () => this.setState({\n                claimLegendarySets: Math.max(1, this.state.claimLegendarySets - 1)\n              }),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: 60,\n                textAlign: \"center\",\n                color: \"black\",\n                background: \"#fff\",\n                borderRadius: 6\n              },\n              value: this.state.claimLegendarySets,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              style: {\n                minWidth: 36,\n                padding: \"0 10px\"\n              },\n              onClick: () => this.setState({\n                claimLegendarySets: this.state.claimLegendarySets + 1\n              }),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              style: {\n                marginLeft: 8,\n                backgroundColor: \"#ffce19\",\n                color: \"black\"\n              },\n              onClick: () => this.setState({\n                claimLegendarySets: Math.max(1, maxSets)\n              }),\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves-light col s12 m6\",\n            disabled: maxSets < 1,\n            onClick: async function () {\n              try {\n                const setsToClaim = Math.min(this.state.claimLegendarySets, maxSets);\n                const wait = ms => new Promise(r => setTimeout(r, ms));\n                for (let k = 0; k < setsToClaim; k++) {\n                  const list = [];\n                  for (let v = 1; v <= 20; v++) {\n                    const arr = commonMap[v];\n                    for (let i = 0; i < 5; i++) list.push(arr[5 * k + i]);\n                  }\n                  const abi = burnCollection1(list, addy, \"0x\").encodeABI();\n                  const txHash = await sendTransaction(abi);\n                  for (let i = 0; i < 60; i++) {\n                    const rcpt = await window.ethereum.request({\n                      method: \"eth_getTransactionReceipt\",\n                      params: [txHash]\n                    });\n                    if (rcpt && rcpt.status === \"0x1\") break;\n                    await wait(1500);\n                  }\n                }\n              } catch (e) {\n                console.log(e);\n              }\n            }.bind(this),\n            style: {\n              flex: \"none\"\n            },\n            children: \"claim legendary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves-light col s12 m6\",\n            disabled: !jackpotBurnABI,\n            onClick: async function () {\n              try {\n                await sendTransaction(jackpotBurnABI);\n              } catch (e) {\n                console.log(e);\n              }\n            },\n            style: {\n              flex: \"none\"\n            },\n            children: \"claim jackpot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"jackpot-dashboard.png\",\n          alt: \"jackpot = 50k\",\n          className: \"col s12 m6\",\n          style: {\n            flex: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#FFAAC9\"\n        },\n        className: \"col s12 row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"black\",\n            marginTop: \"-0.5em\",\n            width: \"100%\"\n          },\n          children: \"MY COLLECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            margin: \"8px 0\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            style: {\n              backgroundColor: \"#ffce19\",\n              color: \"black\",\n              borderRadius: 24\n            },\n            onClick: () => {\n              this.NFTListLOCK = false;\n              fasttoast(\"Refreshing...\");\n              this.refreshNFTListLoop();\n            },\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), commonList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flow-text\",\n          style: {\n            color: \"black\"\n          },\n          children: \"You don't have any common NFTs yet. You should try minting some!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NFTCollapsible, {\n          nftlist: commonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this), legendaryList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flow-text\",\n          style: {\n            color: \"black\"\n          },\n          children: \"You don't have any legendary NFTs yet. You can get one by burning a full collection of common NFTs (20 common variants x 5 NFTs per variant).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NFTCollapsible, {\n          nftlist: legendaryList,\n          isLegendary: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), rngqueue && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: \"12px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                margin: 0,\n                color: \"black\"\n              },\n              children: \"Verify your collection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              style: {\n                backgroundColor: \"#ffce19\",\n                color: \"black\",\n                borderRadius: 24\n              },\n              onClick: () => {\n                this.NFTListLOCK = false;\n                fasttoast(\"Refreshing...\");\n                this.refreshNFTListLoop();\n              },\n              children: \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            className: \"col s12\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"flow-text collapsible-header\",\n                style: {\n                  backgroundImage: \"linear-gradient(90deg, #9B9B9B, white, #9B9B9B)\",\n                  borderRadius: \"999px 999px 999px 999px\",\n                  width: \"100%\",\n                  borderBottom: \"5px solid black\",\n                  borderLeft: \"5px solid black\",\n                  color: \"black\"\n                },\n                children: rngqueue.length.toString() + \" NFTs pending variant assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collapsible-body\",\n                style: {\n                  border: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(NFTSet, {\n                  variant: \"0\",\n                  nftlist: rngqueue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"black\"\n            },\n            children: \"The Gashapon NFT contract employs a hierarchical derivation CSRNG technique that minimizes the frequency of calls made to ChainLink VRF. This results in substantial savings on gas fees and LINK, while ensuring the highest level of casino-grade resistance to manipulation and randomness. However, one limitation of this method is that new NFTs will not be allocated a variant until the shiftRng() function is next executed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            className: \"col s12\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"flow-text collapsible-header\",\n                style: {\n                  backgroundColor: \"#ffce19\",\n                  borderRadius: \"999px\",\n                  borderBottom: \"5px solid black\",\n                  borderLeft: \"5px solid black\",\n                  width: \"100%\",\n                  color: \"black\"\n                },\n                children: \"Rarity summary (your holdings)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collapsible-body\",\n                style: {\n                  border: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: \"black\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Commons (1\\u201320):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: Array.from({\n                      length: 20\n                    }, (_, i) => i + 1).map(v => {\n                      var _nftlist2$v$length, _nftlist2$v;\n                      const c = (_nftlist2$v$length = (_nftlist2$v = nftlist2[v]) === null || _nftlist2$v === void 0 ? void 0 : _nftlist2$v.length) !== null && _nftlist2$v$length !== void 0 ? _nftlist2$v$length : 0;\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          marginRight: \"0.9em\"\n                        },\n                        children: [\"V\", v, \": \", c, \"/5\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Legendaries (21\\u201340):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: Array.from({\n                      length: 20\n                    }, (_, i) => i + 21).map(v => {\n                      var _nftlist2$v$length2, _nftlist2$v2;\n                      const c = (_nftlist2$v$length2 = (_nftlist2$v2 = nftlist2[v]) === null || _nftlist2$v2 === void 0 ? void 0 : _nftlist2$v2.length) !== null && _nftlist2$v$length2 !== void 0 ? _nftlist2$v$length2 : 0;\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          marginRight: \"0.9em\"\n                        },\n                        children: [\"V\", v, \": \", c, \"/1\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8\n                    },\n                    children: [\"Hidden (pending): \", rngqueue.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass NFTCollapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.nftlist = props.nftlist;\n    this.isLegendary = props.isLegendary;\n  }\n  render() {\n    const {\n      nftlist,\n      isLegendary\n    } = this;\n    const ending = isLegendary ? \"/1 NFTs collected\" : \"/5 NFTs collected\";\n    const prefix = isLegendary ? \"Legendary set #\" : \"Set #\";\n    return /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"col s12\",\n      children: nftlist.map(_ref => {\n        let [key, val1] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"flow-text collapsible-header\",\n            style: isLegendary ? {\n              backgroundImage: \"linear-gradient(90deg, #FEBA0A, #FFF469, #FEBA0A)\",\n              borderRadius: \"999px 999px 999px 999px\",\n              borderBottom: \"5px solid black\",\n              borderLeft: \"5px solid black\",\n              width: \"100%\"\n            } : {\n              backgroundColor: \"#ff7bac\",\n              borderRadius: \"999px 999px 999px 999px\",\n              borderBottom: \"5px solid black\",\n              borderLeft: \"5px solid black\",\n              width: \"100%\"\n            },\n            children: prefix + (isLegendary ? (key - 20).toString() : key) + \": \" + val1.length.toString() + ending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collapsible-body\",\n            style: {\n              border: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(NFTSet, {\n              nftlist: val1,\n              variant: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass NFTSet extends Component {\n  constructor(props) {\n    super(props);\n    this.nftlist = props.nftlist;\n    this.variant = props.variant;\n  }\n  render() {\n    const {\n      nftlist,\n      variant\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"col s12\",\n      children: nftlist.map(id => /*#__PURE__*/_jsxDEV(NftCard, {\n        nftid: id,\n        title: \"NFT #\" + id.toString(),\n        variant: variant\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addy: undefined,\n      eth: undefined,\n      providers: [],\n      chosenIndex: 0,\n      modalOpen: false,\n      isMintPage: true\n    };\n  }\n  async connectWallet() {\n    let LOCK = false;\n    const {\n      eth\n    } = this.state;\n    if (!eth) {\n      this.openModal(\"No wallet found\", \"No wallets are detected, please install MetaMask\");\n      return;\n    }\n    if (LOCK) {\n      return;\n    }\n    LOCK = true;\n    try {\n      await eth.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: \"0x61\"\n        }]\n      });\n      const temp = await eth.request({\n        method: \"eth_requestAccounts\"\n      });\n      this.setState({\n        addy: temp[0]\n      });\n    } catch (err) {\n      this.openModal(\"Wallet connection error\", \"Unable to connect wallet!\");\n      return;\n    } finally {\n      LOCK = false;\n    }\n    this.openModal(\"Wallet connected!\", \"Congratulations! Your wallet has been successfully connected to the dapp. You can now start using the features and functionalities available to you. Enjoy!\");\n  }\n  openModal(header, body) {\n    this.setState({\n      modalOpen: true\n    });\n    simpleModal.show(header, body);\n  }\n  componentDidMount() {\n    var _injected$providers;\n    // Detect injected providers (MetaMask, Coinbase, etc.)\n    const provs = [];\n    if (injected !== null && injected !== void 0 && (_injected$providers = injected.providers) !== null && _injected$providers !== void 0 && _injected$providers.length) {\n      for (const p of injected.providers) provs.push(p);\n    } else if (injected) {\n      provs.push(injected);\n    }\n    const pick = provs[0];\n    this.setState({\n      providers: provs,\n      eth: pick\n    });\n    if (pick) {\n      pick.on(\"accountsChanged\", accounts => {\n        this.setState({\n          addy: accounts === null || accounts === void 0 ? void 0 : accounts[0]\n        });\n      });\n      const addy2 = pick.selectedAddress;\n      if (addy2) this.setState({\n        addy: addy2\n      });\n    }\n  }\n  componentWillUnmount() {\n    const {\n      eth\n    } = this.state;\n    if (eth) eth.removeAllListeners(\"accountsChanged\");\n  }\n  render() {\n    const {\n      addy,\n      modalOpen,\n      isMintPage,\n      providers,\n      chosenIndex\n    } = this.state;\n    const shorten = a => a ? a.slice(0, 6) + \"…\" + a.slice(-4) : \"\";\n    const setState2 = this.setState.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ModalExample, {\n        style: {\n          zIndex: 3\n        },\n        isOpen: modalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"gashaponlogo-1.png\",\n            alt: \"Gashapon logo\",\n            className: \"col s12 l4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), addy ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s6 l3 right\",\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: shorten(addy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"exit.png\",\n              alt: \"disconnect\",\n              style: {\n                width: 28,\n                height: 28,\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                const {\n                  eth\n                } = this.state;\n                if (eth) eth.removeAllListeners(\"accountsChanged\");\n                this.setState({\n                  addy: undefined\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s12 l6 right\",\n            style: {\n              display: \"flex\",\n              gap: 8,\n              justifyContent: \"flex-end\"\n            },\n            children: [providers.length > 1 && /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"browser-default\",\n              style: {\n                maxWidth: 180\n              },\n              value: chosenIndex,\n              onChange: e => {\n                const idx = parseInt(e.target.value, 10) || 0;\n                const p = providers[idx];\n                this.setState({\n                  chosenIndex: idx,\n                  eth: p\n                });\n              },\n              children: providers.map((p, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i,\n                children: p.isMetaMask ? \"MetaMask\" : p.isCoinbaseWallet ? \"Coinbase\" : \"Injected \" + (i + 1)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.connectWallet.bind(this),\n              waves: \"light\",\n              elem: \"button\",\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), addy && /*#__PURE__*/_jsxDEV(Button, {\n            waves: \"light\",\n            elem: \"button\",\n            className: \"col s6 l3 right\",\n            styles: {\n              display: \"inline-block\"\n            },\n            onClick: function () {\n              setState2({\n                isMintPage: !isMintPage\n              });\n            },\n            children: isMintPage ? \"dashboard\" : \"mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this), isMintPage ? /*#__PURE__*/_jsxDEV(MintComponent, {\n          notconnected: !addy,\n          openModal: this.openModal.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this) : addy ? /*#__PURE__*/_jsxDEV(NFTList, {\n          addy: addy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App blue-grey darken-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["M","Button","Row","Card","Collapsible","React","Component","MintComponent","web3_eth","BatchRequest","NFTContract","jsxDEV","_jsxDEV","queryPostfix","contractMethods","Contract","inputs","internalType","name","type","outputs","stateMutability","methods","GetNFTVariant","getVariant","GetTokenURI","tokenURI","burnCollection1","burnCollection2","undefined","variantsCache","tokenUriCache","imageCache","simpleModal","htmlspecialchars","mapObj","re","RegExp","Object","keys","join","str","replace","matched","toLowerCase","safetoast","text","toast","html","fasttoast","injected","window","ethereum","sendTransaction","data","request","method","params","from","selectedAddress","to","chainId","ModalExample","constructor","props","state","currentHeader","currentBody","NFTListLOCK","componentDidMount","show","showModal","bind","freeze","header","body","setState","elem","document","getElementById","instance","Modal","init","open","render","className","id","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","href","NftCard","nftid","variant","img","uri","call","http","startsWith","slice","cached","res","fetch","meta","json","image","image_url","e","title","backgroundColor","crossOrigin","alt","src","width","display","NFTList","_props$minjackpot","addy","nftlist","claimLegendarySets","minjackpot","refreshNFTListLoop","cursor","xhr","XMLHttpRequest","query1","setRequestHeader","fatnftlist","JSON","parse","Promise","resolve","reject","onload","status","responseText","errortext","message","onerror","send","token_id","result","push","completer","rejecter","ctr","batch","target","nftid2","add","error","asint","parseInt","toString","requests","length","execute","_unused","thefun","interval","setInterval","componentWillUnmount","clearInterval","nftlist2","nestedlist","rngqueue","entries","legendaryList","commonList","commonCount","legendaryCount","relation","list3","len6","commonMap","variantKey","ids","legendaryMap","legendaryBurnList","v","arr","i","maxSets","Infinity","sets","Math","floor","jackpotBurnList","jackpotBurnABI","encodeABI","margin","alignItems","flexWrap","marginLeft","paddingLeft","gap","minWidth","padding","onClick","max","textAlign","background","borderRadius","value","readOnly","disabled","setsToClaim","min","wait","ms","r","setTimeout","k","list","abi","txHash","rcpt","console","log","flex","marginTop","justifyContent","NFTCollapsible","isLegendary","backgroundImage","borderBottom","borderLeft","border","NFTSet","Array","_","map","_nftlist2$v$length","_nftlist2$v","c","marginRight","_nftlist2$v$length2","_nftlist2$v2","ending","prefix","_ref","key","val1","App","eth","providers","chosenIndex","modalOpen","isMintPage","connectWallet","LOCK","openModal","temp","err","_injected$providers","provs","p","pick","on","accounts","addy2","removeAllListeners","shorten","a","setState2","minHeight","zIndex","isOpen","height","maxWidth","onChange","idx","isMetaMask","isCoinbaseWallet","waves","styles","notconnected"],"sources":["C:/Web3 Work Space/Gasha/BNBALL/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport M from \"materialize-css\";\nimport { Button, Row, Card, Collapsible } from \"react-materialize\";\nimport React, { Component } from \"react\";\nimport MintComponent from \"./MintComponent\";\nimport { web3_eth, BatchRequest, NFTContract } from \"./Common\";\n\nconst queryPostfix =\n  \"/nft?chain=0x61&format=decimal&limit=100&token_addresses%5B0%5D=\" +\n  NFTContract +\n  \"&media_items=false\";\n\nlet contractMethods = new web3_eth.Contract(\n  [\n    {\n      inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n      name: \"getVariant\",\n      outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n      name: \"tokenURI\",\n      outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256[100]\",\n          name: \"tokens\",\n          type: \"uint256[100]\"\n        },\n        {\n          internalType: \"address\",\n          name: \"rewardsReceiver\",\n          type: \"address\"\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\"\n        }\n      ],\n      name: \"burnCollection1\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256[20]\",\n          name: \"tokens\",\n          type: \"uint256[20]\"\n        },\n        {\n          internalType: \"uint256\",\n          name: \"minimumJackpot\",\n          type: \"uint256\"\n        },\n        {\n          internalType: \"address\",\n          name: \"rewardsReceiver\",\n          type: \"address\"\n        }\n      ],\n      name: \"burnCollection2\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }\n  ],\n  NFTContract\n).methods;\n\nconst GetNFTVariant = contractMethods.getVariant;\nconst GetTokenURI = contractMethods.tokenURI;\nconst { burnCollection1, burnCollection2 } = contractMethods;\ncontractMethods = undefined;\n\nconst variantsCache = {};\nconst tokenUriCache = {};\nconst imageCache = {};\n\nconst simpleModal = {};\n\nconst htmlspecialchars = (function () {\n  const mapObj = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#039;\"\n  };\n  const re = new RegExp(Object.keys(mapObj).join(\"|\"), \"gi\");\n\n  return function (str) {\n    return str.replace(re, function (matched) {\n      return mapObj[matched.toLowerCase()];\n    });\n  };\n})();\nconst safetoast = function (text) {\n  M.toast({ html: htmlspecialchars(text) });\n};\nconst fasttoast = function (text) {\n  M.toast({ html: text });\n};\n\nconst injected = window.ethereum;\n\nconst sendTransaction = injected\n  ? function (data) {\n      return injected.request({\n        method: \"eth_sendTransaction\",\n        params: [\n          {\n            from: injected.selectedAddress,\n            to: NFTContract,\n            data: data,\n            chainId: \"0x61\"\n          }\n        ]\n      });\n    }\n  : undefined;\n\nclass ModalExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentHeader: \"\",\n      currentBody: \"\"\n    };\n    this.NFTListLOCK = false;\n  }\n\n  componentDidMount() {\n    simpleModal.show = this.showModal.bind(this);\n    Object.freeze(this.simpleModal);\n  }\n\n  showModal(header, body) {\n    this.setState(\n      {\n        currentHeader: htmlspecialchars(header),\n        currentBody: htmlspecialchars(body)\n      },\n      () => {\n        const elem = document.getElementById(\"theModal\");\n        const instance = M.Modal.init(elem);\n        instance.open();\n      }\n    );\n  }\n\n  render() {\n    const { currentHeader, currentBody } = this.state;\n    return (\n      <div className=\"modal\" id=\"theModal\">\n        <div className=\"modal-content\" style={{ color: \"black\" }}>\n          <strong>{currentHeader}</strong>\n          <p>{currentBody}</p>\n        </div>\n        <div className=\"modal-footer\">\n          <a\n            href=\"#!\"\n            className=\"modal-close waves-effect waves-green btn-flat\"\n          >\n            Close\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\nclass NftCard extends Component {\n  constructor(props) {\n    super(props);\n    this.nftid = props.nftid;\n    this.variant = props.variant;\n    this.state = { img: undefined };\n  }\n\n  async componentDidMount() {\n    try {\n      const id = this.nftid;\n      let uri = tokenUriCache[id];\n      if (!uri) {\n        uri = await GetTokenURI(id).call();\n        tokenUriCache[id] = uri;\n      }\n      if (uri && typeof uri === \"string\") {\n        let http = uri.startsWith(\"ipfs://\")\n          ? \"https://ipfs.io/ipfs/\" + uri.slice(7)\n          : uri;\n        const cached = imageCache[http];\n        if (cached) {\n          this.setState({ img: cached });\n          return;\n        }\n        const res = await fetch(http);\n        const meta = await res.json();\n        let img = meta?.image || meta?.image_url;\n        if (img && typeof img === \"string\") {\n          if (img.startsWith(\"ipfs://\")) img = \"https://ipfs.io/ipfs/\" + img.slice(7);\n          imageCache[http] = img;\n          this.setState({ img });\n        }\n      }\n    } catch (e) {\n      // ignore, fallback to variant sprite\n    }\n  }\n\n  render() {\n    const { nftid, variant } = this;\n    const { img } = this.state;\n    return (\n      <Card\n        className=\"col s6 l3\"\n        title={\"NFT #\" + nftid}\n        style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n      >\n        <img\n          crossOrigin=\"anonymous\"\n          alt=\"\"\n          src={img || (\"nft-\" + variant + \".png\")}\n          style={{ width: \"100%\" }}\n          className=\"card-content\"\n        />\n        <div className=\"card-action\" style={{ width: \"100%\" }}></div>\n        <Button style={{ width: \"100%\", display: \"block\" }}>trade</Button>\n      </Card>\n    );\n  }\n}\n\nclass NFTList extends Component {\n  constructor(props) {\n    super(props);\n    this.addy = props.addy;\n    this.state = {\n      nftlist: null,\n      claimLegendarySets: 1\n    };\n    this.minjackpot = props.minjackpot ?? \"1\";\n    this.NFTListLOCK = false;\n  }\n\n  async refreshNFTListLoop() {\n    const { addy } = this;\n    if (!addy || this.NFTListLOCK) {\n      return;\n    }\n    this.NFTListLOCK = true;\n    try {\n      const nftlist = [];\n      let cursor = undefined;\n      while (true) {\n        const xhr = new XMLHttpRequest();\n        const query1 =\n          \"https://deep-index.moralis.io/api/v2/\" + addy + queryPostfix;\n        xhr.open(\"GET\", cursor ? query1 + \"&cursor=\" + cursor : query1, true);\n        xhr.setRequestHeader(\"accept\", \"application/json\");\n        xhr.setRequestHeader(\n          \"X-API-Key\",\n          \"pIPuzImDyQXnJmUAmA0MrBWw87WFwtv7GLVAy9mXnarIp8lSLDmwDpMmDfEOEhoJ\"\n        );\n        const fatnftlist = JSON.parse(\n          await new Promise(function (resolve, reject) {\n            xhr.onload = function () {\n              const { status, responseText } = xhr;\n              if (status > 199 && status < 300) {\n                resolve(responseText);\n              } else {\n                try {\n                  const errortext = JSON.parse(responseText).message;\n                  fasttoast(\n                    \"Unable to fetch NFT collection: \" +\n                      htmlspecialchars(errortext)\n                  );\n                  reject(\"Moralis API call failed: \" + errortext);\n                } catch (e) {\n                  reject(e);\n                }\n              }\n            };\n            xhr.onerror = reject;\n            xhr.send();\n          })\n        );\n        for (const { token_id } of fatnftlist.result) {\n          nftlist.push(token_id);\n        }\n        cursor = fatnftlist.cursor;\n\n        if (!cursor) {\n          break;\n        }\n      }\n      await new Promise(function (completer, rejecter) {\n        let ctr = 0;\n        const batch = new BatchRequest();\n        let target = 0;\n        for (const nftid2 of nftlist) {\n          if (variantsCache[nftid2] === undefined) {\n            batch.add(\n              GetNFTVariant(nftid2).call.request({}, function (error, result) {\n                if (error) {\n                  rejecter(error);\n                } else {\n                  const asint = parseInt(result, 10);\n                  if (asint > 0) {\n                    variantsCache[nftid2] = asint.toString();\n                  }\n                  if (target === ++ctr) {\n                    completer();\n                  }\n                }\n              })\n            );\n          }\n        }\n        target = batch.requests.length;\n        if (target > 0) {\n          batch.execute();\n        } else {\n          completer();\n        }\n      });\n      this.setState({ nftlist: nftlist });\n    } catch {\n      // swallow; toast already shown upstream when possible\n    } finally {\n      this.NFTListLOCK = false;\n    }\n  }\n\n  componentDidMount() {\n    const thefun = this.refreshNFTListLoop.bind(this);\n    this.interval = setInterval(thefun, 10000);\n    thefun();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { nftlist } = this.state;\n    const { addy, minjackpot } = this;\n\n    if (nftlist === null) {\n      return (\n        <div className=\"App\" style={{ backgroundColor: \"#FFAAC9\" }}>\n          <h1 style={{ color: \"black\", width: \"100%\" }}>\n            Loading collection...\n          </h1>\n          <div className=\"progress\">\n            <div className=\"indeterminate\"></div>\n          </div>\n        </div>\n      );\n    }\n\n    const nftlist2 = {};\n    for (const id of nftlist) {\n      const variant = variantsCache[id];\n      const nestedlist = nftlist2[variant];\n      if (nestedlist) {\n        nestedlist.push(id);\n      } else {\n        nftlist2[variant] = [id];\n      }\n    }\n    const rngqueue = nftlist2[\"undefined\"];\n    delete nftlist2[\"undefined\"];\n    const entries = Object.entries(nftlist2);\n\n    const legendaryList = [];\n    const commonList = [];\n    let commonCount = 0;\n    let legendaryCount = 0;\n    for (const relation of entries) {\n      let list3;\n      const len6 = relation[1].length;\n      if (relation[0] > 20) {\n        list3 = legendaryList;\n        legendaryCount += len6;\n      } else {\n        list3 = commonList;\n        commonCount += len6;\n      }\n      list3.push(relation);\n    }\n    // Build maps for faster lookups\n    const commonMap = {};\n    for (const [variantKey, ids] of commonList) {\n      commonMap[variantKey] = ids;\n    }\n    const legendaryMap = {};\n    for (const [variantKey, ids] of legendaryList) {\n      legendaryMap[variantKey] = ids;\n    }\n\n    // Select exactly 5 of each common variant (1..20)\n    let legendaryBurnList = [];\n    for (let v = 1; v <= 20; v++) {\n      const arr = commonMap[v];\n      if (!arr || arr.length < 5) {\n        legendaryBurnList = undefined;\n        break;\n      }\n      for (let i = 0; i < 5; i++) legendaryBurnList.push(arr[i]);\n    }\n    // compute how many full legendary claim sets are available (5 of each common)\n    let maxSets = Infinity;\n    for (let v = 1; v <= 20; v++) {\n      const arr = commonMap[v] || [];\n      const sets = Math.floor(arr.length / 5);\n      if (sets < maxSets) maxSets = sets;\n    }\n    if (maxSets === Infinity) maxSets = 0;\n\n    // Select exactly 1 of each legendary variant (21..40)\n    let jackpotBurnList = [];\n    for (let v = 21; v <= 40; v++) {\n      const arr = legendaryMap[v];\n      if (!arr || arr.length < 1) {\n        jackpotBurnList = undefined;\n        break;\n      }\n      jackpotBurnList.push(arr[0]);\n    }\n    const jackpotBurnABI =\n      jackpotBurnList && jackpotBurnList.length === 20\n        ? burnCollection2(jackpotBurnList, minjackpot, addy).encodeABI()\n        : undefined;\n    jackpotBurnList = undefined;\n    return (\n      <div className=\"App row\">\n        <Row\n          className=\"col s12\"\n          style={{\n            margin: 0,\n            display: \"flex\",\n            alignItems: \"flex-end\",\n            width: \"100%\",\n            flexWrap: \"wrap\"\n          }}\n        >\n          <Row className=\"col s12 m6\" style={{ marginLeft: \"-10px\", paddingLeft: 0 }}>\n            <div className=\"col s12\" style={{ display: \"flex\", gap: 8, alignItems: \"center\" }}>\n              <span style={{ color: \"black\" }}>Legendary sets:</span>\n              <button className=\"btn\" style={{ minWidth: 36, padding: \"0 10px\" }} onClick={() => this.setState({ claimLegendarySets: Math.max(1, this.state.claimLegendarySets - 1) })}>-</button>\n              <input style={{ width: 60, textAlign: \"center\", color: \"black\", background: \"#fff\", borderRadius: 6 }} value={this.state.claimLegendarySets} readOnly />\n              <button className=\"btn\" style={{ minWidth: 36, padding: \"0 10px\" }} onClick={() => this.setState({ claimLegendarySets: this.state.claimLegendarySets + 1 })}>+</button>\n              <button className=\"btn\" style={{ marginLeft: 8, backgroundColor: \"#ffce19\", color: \"black\" }} onClick={() => this.setState({ claimLegendarySets: Math.max(1, maxSets) })}>Max</button>\n            </div>\n            <button\n              className=\"btn waves-effect waves-light col s12 m6\"\n              disabled={maxSets < 1}\n              onClick={async function () {\n                try {\n                  const setsToClaim = Math.min(this.state.claimLegendarySets, maxSets);\n                  const wait = (ms) => new Promise((r) => setTimeout(r, ms));\n                  for (let k = 0; k < setsToClaim; k++) {\n                    const list = [];\n                    for (let v = 1; v <= 20; v++) {\n                      const arr = commonMap[v];\n                      for (let i = 0; i < 5; i++) list.push(arr[5 * k + i]);\n                    }\n                    const abi = burnCollection1(list, addy, \"0x\").encodeABI();\n                    const txHash = await sendTransaction(abi);\n                    for (let i = 0; i < 60; i++) {\n                      const rcpt = await window.ethereum.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n                      if (rcpt && rcpt.status === \"0x1\") break;\n                      await wait(1500);\n                    }\n                  }\n                } catch (e) { console.log(e); }\n              }.bind(this)}\n              style={{ flex: \"none\" }}\n            >\n              claim legendary\n            </button>\n            <button\n              className=\"btn waves-effect waves-light col s12 m6\"\n              disabled={!jackpotBurnABI}\n              onClick={async function () {\n                try {\n                  await sendTransaction(jackpotBurnABI);\n                } catch (e) {\n                  console.log(e);\n                }\n              }}\n              style={{ flex: \"none\" }}\n            >\n              claim jackpot\n            </button>\n          </Row>\n          <img\n            src=\"jackpot-dashboard.png\"\n            alt=\"jackpot = 50k\"\n            className=\"col s12 m6\"\n            style={{ flex: \"none\" }}\n          ></img>\n        </Row>\n\n        <div style={{ backgroundColor: \"#FFAAC9\" }} className=\"col s12 row\">\n          <h1\n            style={{\n              color: \"black\",\n              marginTop: \"-0.5em\",\n              width: \"100%\"\n            }}\n          >\n            MY COLLECTION\n          </h1>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\", margin: \"8px 0\", width: \"100%\" }}>\n            <button\n              className=\"btn\"\n              style={{ backgroundColor: \"#ffce19\", color: \"black\", borderRadius: 24 }}\n              onClick={() => { this.NFTListLOCK = false; fasttoast(\"Refreshing...\"); this.refreshNFTListLoop(); }}\n            >\n              Verify\n            </button>\n          </div>\n\n          {commonList.length === 0 ? (\n            <p className=\"flow-text\" style={{ color: \"black\" }}>\n              You don't have any common NFTs yet. You should try minting some!\n            </p>\n          ) : (\n            <NFTCollapsible nftlist={commonList}></NFTCollapsible>\n          )}\n\n          {legendaryList.length === 0 ? (\n            <p className=\"flow-text\" style={{ color: \"black\" }}>\n              You don't have any legendary NFTs yet. You can get one by burning\n              a full collection of common NFTs (20 common variants x 5 NFTs per\n              variant).\n            </p>\n          ) : (\n            <NFTCollapsible\n              nftlist={legendaryList}\n              isLegendary={true}\n            ></NFTCollapsible>\n          )}\n\n          {rngqueue && (\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", margin: \"12px 0\" }}>\n                <h5 style={{ margin: 0, color: \"black\" }}>Verify your collection</h5>\n                <button\n                  className=\"btn\"\n                  style={{ backgroundColor: \"#ffce19\", color: \"black\", borderRadius: 24 }}\n                  onClick={() => { this.NFTListLOCK = false; fasttoast(\"Refreshing...\"); this.refreshNFTListLoop(); }}\n                >\n                  Verify\n                </button>\n              </div>\n              <Collapsible className=\"col s12\">\n                <li>\n                  <h1\n                    className=\"flow-text collapsible-header\"\n                    style={{\n                      backgroundImage:\n                        \"linear-gradient(90deg, #9B9B9B, white, #9B9B9B)\",\n                      borderRadius: \"999px 999px 999px 999px\",\n                      width: \"100%\",\n                      borderBottom: \"5px solid black\",\n                      borderLeft: \"5px solid black\",\n                      color: \"black\"\n                    }}\n                  >\n                    {rngqueue.length.toString() +\n                      \" NFTs pending variant assignment\"}\n                  </h1>\n                  <div className=\"collapsible-body\" style={{ border: 0 }}>\n                    <NFTSet variant=\"0\" nftlist={rngqueue} />\n                  </div>\n                </li>\n              </Collapsible>\n              <p style={{ color: \"black\" }}>\n                The Gashapon NFT contract employs a hierarchical derivation\n                CSRNG technique that minimizes the frequency of calls made to\n                ChainLink VRF. This results in substantial savings on gas fees\n                and LINK, while ensuring the highest level of casino-grade\n                resistance to manipulation and randomness. However, one\n                limitation of this method is that new NFTs will not be allocated\n                a variant until the shiftRng() function is next executed.\n              </p>\n              <Collapsible className=\"col s12\">\n                <li>\n                  <h1\n                    className=\"flow-text collapsible-header\"\n                    style={{\n                      backgroundColor: \"#ffce19\",\n                      borderRadius: \"999px\",\n                      borderBottom: \"5px solid black\",\n                      borderLeft: \"5px solid black\",\n                      width: \"100%\",\n                      color: \"black\"\n                    }}\n                  >\n                    Rarity summary (your holdings)\n                  </h1>\n                  <div className=\"collapsible-body\" style={{ border: 0 }}>\n                    <div style={{ color: \"black\" }}>\n                      <strong>Commons (1–20):</strong>\n                      <div>\n                        {Array.from({ length: 20 }, (_, i) => i + 1).map((v) => {\n                          const c = (nftlist2[v]?.length ?? 0);\n                          return (\n                            <span style={{ marginRight: \"0.9em\" }}>V{v}: {c}/5</span>\n                          );\n                        })}\n                      </div>\n                      <strong>Legendaries (21–40):</strong>\n                      <div>\n                        {Array.from({ length: 20 }, (_, i) => i + 21).map((v) => {\n                          const c = (nftlist2[v]?.length ?? 0);\n                          return (\n                            <span style={{ marginRight: \"0.9em\" }}>V{v}: {c}/1</span>\n                          );\n                        })}\n                      </div>\n                      <div style={{ marginTop: 8 }}>Hidden (pending): {rngqueue.length}</div>\n                    </div>\n                  </div>\n                </li>\n              </Collapsible>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nclass NFTCollapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.nftlist = props.nftlist;\n    this.isLegendary = props.isLegendary;\n  }\n\n  render() {\n    const { nftlist, isLegendary } = this;\n\n    const ending = isLegendary ? \"/1 NFTs collected\" : \"/5 NFTs collected\";\n\n    const prefix = isLegendary ? \"Legendary set #\" : \"Set #\";\n\n    return (\n      <Collapsible className=\"col s12\">\n        {nftlist.map(([key, val1]) => (\n          <li>\n            <h1\n              className=\"flow-text collapsible-header\"\n              style={\n                isLegendary\n                  ? {\n                      backgroundImage:\n                        \"linear-gradient(90deg, #FEBA0A, #FFF469, #FEBA0A)\",\n                      borderRadius: \"999px 999px 999px 999px\",\n                      borderBottom: \"5px solid black\",\n                      borderLeft: \"5px solid black\",\n                      width: \"100%\"\n                    }\n                  : {\n                      backgroundColor: \"#ff7bac\",\n                      borderRadius: \"999px 999px 999px 999px\",\n                      borderBottom: \"5px solid black\",\n                      borderLeft: \"5px solid black\",\n                      width: \"100%\"\n                    }\n              }\n            >\n              {prefix +\n                (isLegendary ? (key - 20).toString() : key) +\n                \": \" +\n                val1.length.toString() +\n                ending}\n            </h1>\n            <div className=\"collapsible-body\" style={{ border: 0 }}>\n              <NFTSet nftlist={val1} variant={key}></NFTSet>\n            </div>\n          </li>\n        ))}\n      </Collapsible>\n    );\n  }\n}\nclass NFTSet extends Component {\n  constructor(props) {\n    super(props);\n    this.nftlist = props.nftlist;\n    this.variant = props.variant;\n  }\n\n  render() {\n    const { nftlist, variant } = this;\n    return (\n      <Row className=\"col s12\">\n        {nftlist.map((id) => (\n          <NftCard\n            key={id}\n            nftid={id}\n            title={\"NFT #\" + id.toString()}\n            variant={variant}\n          />\n        ))}\n      </Row>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addy: undefined,\n      eth: undefined,\n      providers: [],\n      chosenIndex: 0,\n      modalOpen: false,\n      isMintPage: true\n    };\n  }\n\n  async connectWallet() {\n    let LOCK = false;\n    const { eth } = this.state;\n\n    if (!eth) {\n      this.openModal(\n        \"No wallet found\",\n        \"No wallets are detected, please install MetaMask\"\n      );\n      return;\n    }\n\n    if (LOCK) {\n      return;\n    }\n\n    LOCK = true;\n\n    try {\n      await eth.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x61\" }]\n      });\n\n      const temp = await eth.request({ method: \"eth_requestAccounts\" });\n      this.setState({ addy: temp[0] });\n    } catch (err) {\n      this.openModal(\"Wallet connection error\", \"Unable to connect wallet!\");\n      return;\n    } finally {\n      LOCK = false;\n    }\n    this.openModal(\n      \"Wallet connected!\",\n      \"Congratulations! Your wallet has been successfully connected to the dapp. You can now start using the features and functionalities available to you. Enjoy!\"\n    );\n  }\n\n  openModal(header, body) {\n    this.setState({ modalOpen: true });\n    simpleModal.show(header, body);\n  }\n\n  componentDidMount() {\n    // Detect injected providers (MetaMask, Coinbase, etc.)\n    const provs = [];\n    if (injected?.providers?.length) {\n      for (const p of injected.providers) provs.push(p);\n    } else if (injected) {\n      provs.push(injected);\n    }\n    const pick = provs[0];\n    this.setState({ providers: provs, eth: pick });\n    if (pick) {\n      pick.on(\"accountsChanged\", (accounts) => {\n        this.setState({ addy: accounts?.[0] });\n      });\n      const addy2 = pick.selectedAddress;\n      if (addy2) this.setState({ addy: addy2 });\n    }\n  }\n\n  componentWillUnmount() {\n    const { eth } = this.state;\n    if (eth) eth.removeAllListeners(\"accountsChanged\");\n  }\n\n  render() {\n    const { addy, modalOpen, isMintPage, providers, chosenIndex } = this.state;\n    const shorten = (a) => (a ? a.slice(0, 6) + \"…\" + a.slice(-4) : \"\");\n    const setState2 = this.setState.bind(this);\n    return (\n      <div style={{ minHeight: \"100vh\" }}>\n        <ModalExample style={{ zIndex: 3 }} isOpen={modalOpen} />\n\n        <div className=\"container2\">\n          <div>\n            <br />\n          </div>\n          <Row>\n            <img\n              src=\"gashaponlogo-1.png\"\n              alt=\"Gashapon logo\"\n              className=\"col s12 l4\"\n            />\n            {addy ? (\n              <div className=\"col s6 l3 right\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", gap: 8 }}>\n                <span style={{ color: \"black\" }}>{shorten(addy)}</span>\n                <img\n                  src=\"exit.png\"\n                  alt=\"disconnect\"\n                  style={{ width: 28, height: 28, cursor: \"pointer\" }}\n                  onClick={() => {\n                    const { eth } = this.state;\n                    if (eth) eth.removeAllListeners(\"accountsChanged\");\n                    this.setState({ addy: undefined });\n                  }}\n                />\n              </div>\n            ) : (\n              <div className=\"col s12 l6 right\" style={{ display: \"flex\", gap: 8, justifyContent: \"flex-end\" }}>\n                {providers.length > 1 && (\n                  <select\n                    className=\"browser-default\"\n                    style={{ maxWidth: 180 }}\n                    value={chosenIndex}\n                    onChange={(e) => {\n                      const idx = parseInt(e.target.value, 10) || 0;\n                      const p = providers[idx];\n                      this.setState({ chosenIndex: idx, eth: p });\n                    }}\n                  >\n                    {providers.map((p, i) => (\n                      <option key={i} value={i}>\n                        {p.isMetaMask ? \"MetaMask\" : p.isCoinbaseWallet ? \"Coinbase\" : \"Injected \" + (i + 1)}\n                      </option>\n                    ))}\n                  </select>\n                )}\n                <Button onClick={this.connectWallet.bind(this)} waves=\"light\" elem=\"button\">\n                  Connect Wallet\n                </Button>\n              </div>\n            )}\n            {addy && (\n              <Button\n                waves=\"light\"\n                elem=\"button\"\n                className=\"col s6 l3 right\"\n                styles={{ display: \"inline-block\" }}\n                onClick={function () {\n                  setState2({ isMintPage: !isMintPage });\n                }}\n              >\n                {isMintPage ? \"dashboard\" : \"mint\"}\n              </Button>\n            )}\n          </Row>\n          {isMintPage ? (\n            <MintComponent\n              notconnected={!addy}\n              openModal={this.openModal.bind(this)}\n            ></MintComponent>\n          ) : addy ? (\n            <NFTList addy={addy}></NFTList>\n          ) : (\n            <div className=\"App blue-grey darken-3\"></div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,cAAc;AACrB,OAAOA,CAAC,MAAM,iBAAiB;AAC/B,SAASC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,WAAW,QAAQ,mBAAmB;AAClE,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,YAAY,GAChB,kEAAkE,GAClEH,WAAW,GACX,oBAAoB;AAEtB,IAAII,eAAe,GAAG,IAAIN,QAAQ,CAACO,QAAQ,CACzC,CACE;EACEC,MAAM,EAAE,CAAC;IAAEC,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAClED,IAAI,EAAE,YAAY;EAClBE,OAAO,EAAE,CAAC;IAAEH,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACjEE,eAAe,EAAE,MAAM;EACvBF,IAAI,EAAE;AACR,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;IAAEC,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACvED,IAAI,EAAE,UAAU;EAChBE,OAAO,EAAE,CAAC;IAAEH,YAAY,EAAE,QAAQ;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAS,CAAC,CAAC;EAC/DE,eAAe,EAAE,MAAM;EACvBF,IAAI,EAAE;AACR,CAAC,EACD;EACEH,MAAM,EAAE,CACN;IACEC,YAAY,EAAE,cAAc;IAC5BC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,OAAO;IACrBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;EACR,CAAC,CACF;EACDD,IAAI,EAAE,iBAAiB;EACvBE,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,YAAY;EAC7BF,IAAI,EAAE;AACR,CAAC,EACD;EACEH,MAAM,EAAE,CACN;IACEC,YAAY,EAAE,aAAa;IAC3BC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACR,CAAC,CACF;EACDD,IAAI,EAAE,iBAAiB;EACvBE,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,YAAY;EAC7BF,IAAI,EAAE;AACR,CAAC,CACF,EACDT,WACF,CAAC,CAACY,OAAO;AAET,MAAMC,aAAa,GAAGT,eAAe,CAACU,UAAU;AAChD,MAAMC,WAAW,GAAGX,eAAe,CAACY,QAAQ;AAC5C,MAAM;EAAEC,eAAe;EAAEC;AAAgB,CAAC,GAAGd,eAAe;AAC5DA,eAAe,GAAGe,SAAS;AAE3B,MAAMC,aAAa,GAAG,CAAC,CAAC;AACxB,MAAMC,aAAa,GAAG,CAAC,CAAC;AACxB,MAAMC,UAAU,GAAG,CAAC,CAAC;AAErB,MAAMC,WAAW,GAAG,CAAC,CAAC;AAEtB,MAAMC,gBAAgB,GAAI,YAAY;EACpC,MAAMC,MAAM,GAAG;IACb,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE;EACP,CAAC;EACD,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;EAE1D,OAAO,UAAUC,GAAG,EAAE;IACpB,OAAOA,GAAG,CAACC,OAAO,CAACN,EAAE,EAAE,UAAUO,OAAO,EAAE;MACxC,OAAOR,MAAM,CAACQ,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;AACH,CAAC,CAAE,CAAC;AACJ,MAAMC,SAAS,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAChC9C,CAAC,CAAC+C,KAAK,CAAC;IAAEC,IAAI,EAAEd,gBAAgB,CAACY,IAAI;EAAE,CAAC,CAAC;AAC3C,CAAC;AACD,MAAMG,SAAS,GAAG,SAAAA,CAAUH,IAAI,EAAE;EAChC9C,CAAC,CAAC+C,KAAK,CAAC;IAAEC,IAAI,EAAEF;EAAK,CAAC,CAAC;AACzB,CAAC;AAED,MAAMI,QAAQ,GAAGC,MAAM,CAACC,QAAQ;AAEhC,MAAMC,eAAe,GAAGH,QAAQ,GAC5B,UAAUI,IAAI,EAAE;EACd,OAAOJ,QAAQ,CAACK,OAAO,CAAC;IACtBC,MAAM,EAAE,qBAAqB;IAC7BC,MAAM,EAAE,CACN;MACEC,IAAI,EAAER,QAAQ,CAACS,eAAe;MAC9BC,EAAE,EAAElD,WAAW;MACf4C,IAAI,EAAEA,IAAI;MACVO,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CAAC;AACJ,CAAC,GACDhC,SAAS;AAEb,MAAMiC,YAAY,SAASxD,SAAS,CAAC;EACnCyD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE;IACf,CAAC;IACD,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAEAC,iBAAiBA,CAAA,EAAG;IAClBpC,WAAW,CAACqC,IAAI,GAAG,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5ClC,MAAM,CAACmC,MAAM,CAAC,IAAI,CAACxC,WAAW,CAAC;EACjC;EAEAsC,SAASA,CAACG,MAAM,EAAEC,IAAI,EAAE;IACtB,IAAI,CAACC,QAAQ,CACX;MACEV,aAAa,EAAEhC,gBAAgB,CAACwC,MAAM,CAAC;MACvCP,WAAW,EAAEjC,gBAAgB,CAACyC,IAAI;IACpC,CAAC,EACD,MAAM;MACJ,MAAME,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MAChD,MAAMC,QAAQ,GAAGhF,CAAC,CAACiF,KAAK,CAACC,IAAI,CAACL,IAAI,CAAC;MACnCG,QAAQ,CAACG,IAAI,CAAC,CAAC;IACjB,CACF,CAAC;EACH;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAElB,aAAa;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACF,KAAK;IACjD,oBACErD,OAAA;MAAKyE,SAAS,EAAC,OAAO;MAACC,EAAE,EAAC,UAAU;MAAAC,QAAA,gBAClC3E,OAAA;QAAKyE,SAAS,EAAC,eAAe;QAACG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAF,QAAA,gBACvD3E,OAAA;UAAA2E,QAAA,EAASrB;QAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAChCjF,OAAA;UAAA2E,QAAA,EAAIpB;QAAW;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACNjF,OAAA;QAAKyE,SAAS,EAAC,cAAc;QAAAE,QAAA,eAC3B3E,OAAA;UACEkF,IAAI,EAAC,IAAI;UACTT,SAAS,EAAC,+CAA+C;UAAAE,QAAA,EAC1D;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AACA,MAAME,OAAO,SAASzF,SAAS,CAAC;EAC9ByD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACgC,KAAK,GAAGhC,KAAK,CAACgC,KAAK;IACxB,IAAI,CAACC,OAAO,GAAGjC,KAAK,CAACiC,OAAO;IAC5B,IAAI,CAAChC,KAAK,GAAG;MAAEiC,GAAG,EAAErE;IAAU,CAAC;EACjC;EAEA,MAAMwC,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMiB,EAAE,GAAG,IAAI,CAACU,KAAK;MACrB,IAAIG,GAAG,GAAGpE,aAAa,CAACuD,EAAE,CAAC;MAC3B,IAAI,CAACa,GAAG,EAAE;QACRA,GAAG,GAAG,MAAM1E,WAAW,CAAC6D,EAAE,CAAC,CAACc,IAAI,CAAC,CAAC;QAClCrE,aAAa,CAACuD,EAAE,CAAC,GAAGa,GAAG;MACzB;MACA,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAClC,IAAIE,IAAI,GAAGF,GAAG,CAACG,UAAU,CAAC,SAAS,CAAC,GAChC,uBAAuB,GAAGH,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,GACtCJ,GAAG;QACP,MAAMK,MAAM,GAAGxE,UAAU,CAACqE,IAAI,CAAC;QAC/B,IAAIG,MAAM,EAAE;UACV,IAAI,CAAC5B,QAAQ,CAAC;YAAEsB,GAAG,EAAEM;UAAO,CAAC,CAAC;UAC9B;QACF;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,IAAI,CAAC;QAC7B,MAAMM,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAIV,GAAG,GAAG,CAAAS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,MAAIF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,SAAS;QACxC,IAAIZ,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAClC,IAAIA,GAAG,CAACI,UAAU,CAAC,SAAS,CAAC,EAAEJ,GAAG,GAAG,uBAAuB,GAAGA,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC;UAC3EvE,UAAU,CAACqE,IAAI,CAAC,GAAGH,GAAG;UACtB,IAAI,CAACtB,QAAQ,CAAC;YAAEsB;UAAI,CAAC,CAAC;QACxB;MACF;IACF,CAAC,CAAC,OAAOa,CAAC,EAAE;MACV;IAAA;EAEJ;EAEA3B,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEY,KAAK;MAAEC;IAAQ,CAAC,GAAG,IAAI;IAC/B,MAAM;MAAEC;IAAI,CAAC,GAAG,IAAI,CAACjC,KAAK;IAC1B,oBACErD,OAAA,CAACT,IAAI;MACHkF,SAAS,EAAC,WAAW;MACrB2B,KAAK,EAAE,OAAO,GAAGhB,KAAM;MACvBR,KAAK,EAAE;QAAEyB,eAAe,EAAE;MAAmB,CAAE;MAAA1B,QAAA,gBAE/C3E,OAAA;QACEsG,WAAW,EAAC,WAAW;QACvBC,GAAG,EAAC,EAAE;QACNC,GAAG,EAAElB,GAAG,IAAK,MAAM,GAAGD,OAAO,GAAG,MAAQ;QACxCT,KAAK,EAAE;UAAE6B,KAAK,EAAE;QAAO,CAAE;QACzBhC,SAAS,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFjF,OAAA;QAAKyE,SAAS,EAAC,aAAa;QAACG,KAAK,EAAE;UAAE6B,KAAK,EAAE;QAAO;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7DjF,OAAA,CAACX,MAAM;QAACuF,KAAK,EAAE;UAAE6B,KAAK,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAQ,CAAE;QAAA/B,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEX;AACF;AAEA,MAAM0B,OAAO,SAASjH,SAAS,CAAC;EAC9ByD,WAAWA,CAACC,KAAK,EAAE;IAAA,IAAAwD,iBAAA;IACjB,KAAK,CAACxD,KAAK,CAAC;IACZ,IAAI,CAACyD,IAAI,GAAGzD,KAAK,CAACyD,IAAI;IACtB,IAAI,CAACxD,KAAK,GAAG;MACXyD,OAAO,EAAE,IAAI;MACbC,kBAAkB,EAAE;IACtB,CAAC;IACD,IAAI,CAACC,UAAU,IAAAJ,iBAAA,GAAGxD,KAAK,CAAC4D,UAAU,cAAAJ,iBAAA,cAAAA,iBAAA,GAAI,GAAG;IACzC,IAAI,CAACpD,WAAW,GAAG,KAAK;EAC1B;EAEA,MAAMyD,kBAAkBA,CAAA,EAAG;IACzB,MAAM;MAAEJ;IAAK,CAAC,GAAG,IAAI;IACrB,IAAI,CAACA,IAAI,IAAI,IAAI,CAACrD,WAAW,EAAE;MAC7B;IACF;IACA,IAAI,CAACA,WAAW,GAAG,IAAI;IACvB,IAAI;MACF,MAAMsD,OAAO,GAAG,EAAE;MAClB,IAAII,MAAM,GAAGjG,SAAS;MACtB,OAAO,IAAI,EAAE;QACX,MAAMkG,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;QAChC,MAAMC,MAAM,GACV,uCAAuC,GAAGR,IAAI,GAAG5G,YAAY;QAC/DkH,GAAG,CAAC5C,IAAI,CAAC,KAAK,EAAE2C,MAAM,GAAGG,MAAM,GAAG,UAAU,GAAGH,MAAM,GAAGG,MAAM,EAAE,IAAI,CAAC;QACrEF,GAAG,CAACG,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB,CAAC;QAClDH,GAAG,CAACG,gBAAgB,CAClB,WAAW,EACX,kEACF,CAAC;QACD,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAC3B,MAAM,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;UAC3CT,GAAG,CAACU,MAAM,GAAG,YAAY;YACvB,MAAM;cAAEC,MAAM;cAAEC;YAAa,CAAC,GAAGZ,GAAG;YACpC,IAAIW,MAAM,GAAG,GAAG,IAAIA,MAAM,GAAG,GAAG,EAAE;cAChCH,OAAO,CAACI,YAAY,CAAC;YACvB,CAAC,MAAM;cACL,IAAI;gBACF,MAAMC,SAAS,GAAGR,IAAI,CAACC,KAAK,CAACM,YAAY,CAAC,CAACE,OAAO;gBAClD5F,SAAS,CACP,kCAAkC,GAChCf,gBAAgB,CAAC0G,SAAS,CAC9B,CAAC;gBACDJ,MAAM,CAAC,2BAA2B,GAAGI,SAAS,CAAC;cACjD,CAAC,CAAC,OAAO7B,CAAC,EAAE;gBACVyB,MAAM,CAACzB,CAAC,CAAC;cACX;YACF;UACF,CAAC;UACDgB,GAAG,CAACe,OAAO,GAAGN,MAAM;UACpBT,GAAG,CAACgB,IAAI,CAAC,CAAC;QACZ,CAAC,CACH,CAAC;QACD,KAAK,MAAM;UAAEC;QAAS,CAAC,IAAIb,UAAU,CAACc,MAAM,EAAE;UAC5CvB,OAAO,CAACwB,IAAI,CAACF,QAAQ,CAAC;QACxB;QACAlB,MAAM,GAAGK,UAAU,CAACL,MAAM;QAE1B,IAAI,CAACA,MAAM,EAAE;UACX;QACF;MACF;MACA,MAAM,IAAIQ,OAAO,CAAC,UAAUa,SAAS,EAAEC,QAAQ,EAAE;QAC/C,IAAIC,GAAG,GAAG,CAAC;QACX,MAAMC,KAAK,GAAG,IAAI7I,YAAY,CAAC,CAAC;QAChC,IAAI8I,MAAM,GAAG,CAAC;QACd,KAAK,MAAMC,MAAM,IAAI9B,OAAO,EAAE;UAC5B,IAAI5F,aAAa,CAAC0H,MAAM,CAAC,KAAK3H,SAAS,EAAE;YACvCyH,KAAK,CAACG,GAAG,CACPlI,aAAa,CAACiI,MAAM,CAAC,CAACpD,IAAI,CAAC7C,OAAO,CAAC,CAAC,CAAC,EAAE,UAAUmG,KAAK,EAAET,MAAM,EAAE;cAC9D,IAAIS,KAAK,EAAE;gBACTN,QAAQ,CAACM,KAAK,CAAC;cACjB,CAAC,MAAM;gBACL,MAAMC,KAAK,GAAGC,QAAQ,CAACX,MAAM,EAAE,EAAE,CAAC;gBAClC,IAAIU,KAAK,GAAG,CAAC,EAAE;kBACb7H,aAAa,CAAC0H,MAAM,CAAC,GAAGG,KAAK,CAACE,QAAQ,CAAC,CAAC;gBAC1C;gBACA,IAAIN,MAAM,KAAK,EAAEF,GAAG,EAAE;kBACpBF,SAAS,CAAC,CAAC;gBACb;cACF;YACF,CAAC,CACH,CAAC;UACH;QACF;QACAI,MAAM,GAAGD,KAAK,CAACQ,QAAQ,CAACC,MAAM;QAC9B,IAAIR,MAAM,GAAG,CAAC,EAAE;UACdD,KAAK,CAACU,OAAO,CAAC,CAAC;QACjB,CAAC,MAAM;UACLb,SAAS,CAAC,CAAC;QACb;MACF,CAAC,CAAC;MACF,IAAI,CAACvE,QAAQ,CAAC;QAAE8C,OAAO,EAAEA;MAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,OAAAuC,OAAA,EAAM;MACN;IAAA,CACD,SAAS;MACR,IAAI,CAAC7F,WAAW,GAAG,KAAK;IAC1B;EACF;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAM6F,MAAM,GAAG,IAAI,CAACrC,kBAAkB,CAACrD,IAAI,CAAC,IAAI,CAAC;IACjD,IAAI,CAAC2F,QAAQ,GAAGC,WAAW,CAACF,MAAM,EAAE,KAAK,CAAC;IAC1CA,MAAM,CAAC,CAAC;EACV;EAEAG,oBAAoBA,CAAA,EAAG;IACrBC,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;EAC9B;EAEA/E,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEsC;IAAQ,CAAC,GAAG,IAAI,CAACzD,KAAK;IAC9B,MAAM;MAAEwD,IAAI;MAAEG;IAAW,CAAC,GAAG,IAAI;IAEjC,IAAIF,OAAO,KAAK,IAAI,EAAE;MACpB,oBACE9G,OAAA;QAAKyE,SAAS,EAAC,KAAK;QAACG,KAAK,EAAE;UAAEyB,eAAe,EAAE;QAAU,CAAE;QAAA1B,QAAA,gBACzD3E,OAAA;UAAI4E,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAE4B,KAAK,EAAE;UAAO,CAAE;UAAA9B,QAAA,EAAC;QAE9C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLjF,OAAA;UAAKyE,SAAS,EAAC,UAAU;UAAAE,QAAA,eACvB3E,OAAA;YAAKyE,SAAS,EAAC;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;IAEA,MAAM0E,QAAQ,GAAG,CAAC,CAAC;IACnB,KAAK,MAAMjF,EAAE,IAAIoC,OAAO,EAAE;MACxB,MAAMzB,OAAO,GAAGnE,aAAa,CAACwD,EAAE,CAAC;MACjC,MAAMkF,UAAU,GAAGD,QAAQ,CAACtE,OAAO,CAAC;MACpC,IAAIuE,UAAU,EAAE;QACdA,UAAU,CAACtB,IAAI,CAAC5D,EAAE,CAAC;MACrB,CAAC,MAAM;QACLiF,QAAQ,CAACtE,OAAO,CAAC,GAAG,CAACX,EAAE,CAAC;MAC1B;IACF;IACA,MAAMmF,QAAQ,GAAGF,QAAQ,CAAC,WAAW,CAAC;IACtC,OAAOA,QAAQ,CAAC,WAAW,CAAC;IAC5B,MAAMG,OAAO,GAAGpI,MAAM,CAACoI,OAAO,CAACH,QAAQ,CAAC;IAExC,MAAMI,aAAa,GAAG,EAAE;IACxB,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,cAAc,GAAG,CAAC;IACtB,KAAK,MAAMC,QAAQ,IAAIL,OAAO,EAAE;MAC9B,IAAIM,KAAK;MACT,MAAMC,IAAI,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAChB,MAAM;MAC/B,IAAIgB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;QACpBC,KAAK,GAAGL,aAAa;QACrBG,cAAc,IAAIG,IAAI;MACxB,CAAC,MAAM;QACLD,KAAK,GAAGJ,UAAU;QAClBC,WAAW,IAAII,IAAI;MACrB;MACAD,KAAK,CAAC9B,IAAI,CAAC6B,QAAQ,CAAC;IACtB;IACA;IACA,MAAMG,SAAS,GAAG,CAAC,CAAC;IACpB,KAAK,MAAM,CAACC,UAAU,EAAEC,GAAG,CAAC,IAAIR,UAAU,EAAE;MAC1CM,SAAS,CAACC,UAAU,CAAC,GAAGC,GAAG;IAC7B;IACA,MAAMC,YAAY,GAAG,CAAC,CAAC;IACvB,KAAK,MAAM,CAACF,UAAU,EAAEC,GAAG,CAAC,IAAIT,aAAa,EAAE;MAC7CU,YAAY,CAACF,UAAU,CAAC,GAAGC,GAAG;IAChC;;IAEA;IACA,IAAIE,iBAAiB,GAAG,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,GAAG,GAAGN,SAAS,CAACK,CAAC,CAAC;MACxB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACzB,MAAM,GAAG,CAAC,EAAE;QAC1BuB,iBAAiB,GAAGzJ,SAAS;QAC7B;MACF;MACA,KAAK,IAAI4J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAEH,iBAAiB,CAACpC,IAAI,CAACsC,GAAG,CAACC,CAAC,CAAC,CAAC;IAC5D;IACA;IACA,IAAIC,OAAO,GAAGC,QAAQ;IACtB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,GAAG,GAAGN,SAAS,CAACK,CAAC,CAAC,IAAI,EAAE;MAC9B,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,GAAG,CAACzB,MAAM,GAAG,CAAC,CAAC;MACvC,IAAI6B,IAAI,GAAGF,OAAO,EAAEA,OAAO,GAAGE,IAAI;IACpC;IACA,IAAIF,OAAO,KAAKC,QAAQ,EAAED,OAAO,GAAG,CAAC;;IAErC;IACA,IAAIK,eAAe,GAAG,EAAE;IACxB,KAAK,IAAIR,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC7B,MAAMC,GAAG,GAAGH,YAAY,CAACE,CAAC,CAAC;MAC3B,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACzB,MAAM,GAAG,CAAC,EAAE;QAC1BgC,eAAe,GAAGlK,SAAS;QAC3B;MACF;MACAkK,eAAe,CAAC7C,IAAI,CAACsC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B;IACA,MAAMQ,cAAc,GAClBD,eAAe,IAAIA,eAAe,CAAChC,MAAM,KAAK,EAAE,GAC5CnI,eAAe,CAACmK,eAAe,EAAEnE,UAAU,EAAEH,IAAI,CAAC,CAACwE,SAAS,CAAC,CAAC,GAC9DpK,SAAS;IACfkK,eAAe,GAAGlK,SAAS;IAC3B,oBACEjB,OAAA;MAAKyE,SAAS,EAAC,SAAS;MAAAE,QAAA,gBACtB3E,OAAA,CAACV,GAAG;QACFmF,SAAS,EAAC,SAAS;QACnBG,KAAK,EAAE;UACL0G,MAAM,EAAE,CAAC;UACT5E,OAAO,EAAE,MAAM;UACf6E,UAAU,EAAE,UAAU;UACtB9E,KAAK,EAAE,MAAM;UACb+E,QAAQ,EAAE;QACZ,CAAE;QAAA7G,QAAA,gBAEF3E,OAAA,CAACV,GAAG;UAACmF,SAAS,EAAC,YAAY;UAACG,KAAK,EAAE;YAAE6G,UAAU,EAAE,OAAO;YAAEC,WAAW,EAAE;UAAE,CAAE;UAAA/G,QAAA,gBACzE3E,OAAA;YAAKyE,SAAS,EAAC,SAAS;YAACG,KAAK,EAAE;cAAE8B,OAAO,EAAE,MAAM;cAAEiF,GAAG,EAAE,CAAC;cAAEJ,UAAU,EAAE;YAAS,CAAE;YAAA5G,QAAA,gBAChF3E,OAAA;cAAM4E,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAQ,CAAE;cAAAF,QAAA,EAAC;YAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvDjF,OAAA;cAAQyE,SAAS,EAAC,KAAK;cAACG,KAAK,EAAE;gBAAEgH,QAAQ,EAAE,EAAE;gBAAEC,OAAO,EAAE;cAAS,CAAE;cAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAC9H,QAAQ,CAAC;gBAAE+C,kBAAkB,EAAEkE,IAAI,CAACc,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC1I,KAAK,CAAC0D,kBAAkB,GAAG,CAAC;cAAE,CAAC,CAAE;cAAApC,QAAA,EAAC;YAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpLjF,OAAA;cAAO4E,KAAK,EAAE;gBAAE6B,KAAK,EAAE,EAAE;gBAAEuF,SAAS,EAAE,QAAQ;gBAAEnH,KAAK,EAAE,OAAO;gBAAEoH,UAAU,EAAE,MAAM;gBAAEC,YAAY,EAAE;cAAE,CAAE;cAACC,KAAK,EAAE,IAAI,CAAC9I,KAAK,CAAC0D,kBAAmB;cAACqF,QAAQ;YAAA;cAAAtH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxJjF,OAAA;cAAQyE,SAAS,EAAC,KAAK;cAACG,KAAK,EAAE;gBAAEgH,QAAQ,EAAE,EAAE;gBAAEC,OAAO,EAAE;cAAS,CAAE;cAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAC9H,QAAQ,CAAC;gBAAE+C,kBAAkB,EAAE,IAAI,CAAC1D,KAAK,CAAC0D,kBAAkB,GAAG;cAAE,CAAC,CAAE;cAAApC,QAAA,EAAC;YAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvKjF,OAAA;cAAQyE,SAAS,EAAC,KAAK;cAACG,KAAK,EAAE;gBAAE6G,UAAU,EAAE,CAAC;gBAAEpF,eAAe,EAAE,SAAS;gBAAExB,KAAK,EAAE;cAAQ,CAAE;cAACiH,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAC9H,QAAQ,CAAC;gBAAE+C,kBAAkB,EAAEkE,IAAI,CAACc,GAAG,CAAC,CAAC,EAAEjB,OAAO;cAAE,CAAC,CAAE;cAAAnG,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnL,CAAC,eACNjF,OAAA;YACEyE,SAAS,EAAC,yCAAyC;YACnD4H,QAAQ,EAAEvB,OAAO,GAAG,CAAE;YACtBgB,OAAO,EAAE,kBAAkB;cACzB,IAAI;gBACF,MAAMQ,WAAW,GAAGrB,IAAI,CAACsB,GAAG,CAAC,IAAI,CAAClJ,KAAK,CAAC0D,kBAAkB,EAAE+D,OAAO,CAAC;gBACpE,MAAM0B,IAAI,GAAIC,EAAE,IAAK,IAAI/E,OAAO,CAAEgF,CAAC,IAAKC,UAAU,CAACD,CAAC,EAAED,EAAE,CAAC,CAAC;gBAC1D,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,EAAEM,CAAC,EAAE,EAAE;kBACpC,MAAMC,IAAI,GAAG,EAAE;kBACf,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;oBAC5B,MAAMC,GAAG,GAAGN,SAAS,CAACK,CAAC,CAAC;oBACxB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAEgC,IAAI,CAACvE,IAAI,CAACsC,GAAG,CAAC,CAAC,GAAGgC,CAAC,GAAG/B,CAAC,CAAC,CAAC;kBACvD;kBACA,MAAMiC,GAAG,GAAG/L,eAAe,CAAC8L,IAAI,EAAEhG,IAAI,EAAE,IAAI,CAAC,CAACwE,SAAS,CAAC,CAAC;kBACzD,MAAM0B,MAAM,GAAG,MAAMtK,eAAe,CAACqK,GAAG,CAAC;kBACzC,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;oBAC3B,MAAMmC,IAAI,GAAG,MAAMzK,MAAM,CAACC,QAAQ,CAACG,OAAO,CAAC;sBAAEC,MAAM,EAAE,2BAA2B;sBAAEC,MAAM,EAAE,CAACkK,MAAM;oBAAE,CAAC,CAAC;oBACrG,IAAIC,IAAI,IAAIA,IAAI,CAAClF,MAAM,KAAK,KAAK,EAAE;oBACnC,MAAM0E,IAAI,CAAC,IAAI,CAAC;kBAClB;gBACF;cACF,CAAC,CAAC,OAAOrG,CAAC,EAAE;gBAAE8G,OAAO,CAACC,GAAG,CAAC/G,CAAC,CAAC;cAAE;YAChC,CAAC,CAACvC,IAAI,CAAC,IAAI,CAAE;YACbgB,KAAK,EAAE;cAAEuI,IAAI,EAAE;YAAO,CAAE;YAAAxI,QAAA,EACzB;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjF,OAAA;YACEyE,SAAS,EAAC,yCAAyC;YACnD4H,QAAQ,EAAE,CAACjB,cAAe;YAC1BU,OAAO,EAAE,eAAAA,CAAA,EAAkB;cACzB,IAAI;gBACF,MAAMrJ,eAAe,CAAC2I,cAAc,CAAC;cACvC,CAAC,CAAC,OAAOjF,CAAC,EAAE;gBACV8G,OAAO,CAACC,GAAG,CAAC/G,CAAC,CAAC;cAChB;YACF,CAAE;YACFvB,KAAK,EAAE;cAAEuI,IAAI,EAAE;YAAO,CAAE;YAAAxI,QAAA,EACzB;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjF,OAAA;UACEwG,GAAG,EAAC,uBAAuB;UAC3BD,GAAG,EAAC,eAAe;UACnB9B,SAAS,EAAC,YAAY;UACtBG,KAAK,EAAE;YAAEuI,IAAI,EAAE;UAAO;QAAE;UAAArI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENjF,OAAA;QAAK4E,KAAK,EAAE;UAAEyB,eAAe,EAAE;QAAU,CAAE;QAAC5B,SAAS,EAAC,aAAa;QAAAE,QAAA,gBACjE3E,OAAA;UACE4E,KAAK,EAAE;YACLC,KAAK,EAAE,OAAO;YACduI,SAAS,EAAE,QAAQ;YACnB3G,KAAK,EAAE;UACT,CAAE;UAAA9B,QAAA,EACH;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLjF,OAAA;UAAK4E,KAAK,EAAE;YAAE8B,OAAO,EAAE,MAAM;YAAE2G,cAAc,EAAE,UAAU;YAAE9B,UAAU,EAAE,QAAQ;YAAED,MAAM,EAAE,OAAO;YAAE7E,KAAK,EAAE;UAAO,CAAE;UAAA9B,QAAA,eAChH3E,OAAA;YACEyE,SAAS,EAAC,KAAK;YACfG,KAAK,EAAE;cAAEyB,eAAe,EAAE,SAAS;cAAExB,KAAK,EAAE,OAAO;cAAEqH,YAAY,EAAE;YAAG,CAAE;YACxEJ,OAAO,EAAEA,CAAA,KAAM;cAAE,IAAI,CAACtI,WAAW,GAAG,KAAK;cAAEnB,SAAS,CAAC,eAAe,CAAC;cAAE,IAAI,CAAC4E,kBAAkB,CAAC,CAAC;YAAE,CAAE;YAAAtC,QAAA,EACrG;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAEL+E,UAAU,CAACb,MAAM,KAAK,CAAC,gBACtBnJ,OAAA;UAAGyE,SAAS,EAAC,WAAW;UAACG,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAF,QAAA,EAAC;QAEpD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEJjF,OAAA,CAACsN,cAAc;UAACxG,OAAO,EAAEkD;QAAW;UAAAlF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACtD,EAEA8E,aAAa,CAACZ,MAAM,KAAK,CAAC,gBACzBnJ,OAAA;UAAGyE,SAAS,EAAC,WAAW;UAACG,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAF,QAAA,EAAC;QAIpD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEJjF,OAAA,CAACsN,cAAc;UACbxG,OAAO,EAAEiD,aAAc;UACvBwD,WAAW,EAAE;QAAK;UAAAzI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAClB,EAEA4E,QAAQ,iBACP7J,OAAA;UAAA2E,QAAA,gBACE3E,OAAA;YAAK4E,KAAK,EAAE;cAAE8B,OAAO,EAAE,MAAM;cAAE2G,cAAc,EAAE,eAAe;cAAE9B,UAAU,EAAE,QAAQ;cAAED,MAAM,EAAE;YAAS,CAAE;YAAA3G,QAAA,gBACvG3E,OAAA;cAAI4E,KAAK,EAAE;gBAAE0G,MAAM,EAAE,CAAC;gBAAEzG,KAAK,EAAE;cAAQ,CAAE;cAAAF,QAAA,EAAC;YAAsB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrEjF,OAAA;cACEyE,SAAS,EAAC,KAAK;cACfG,KAAK,EAAE;gBAAEyB,eAAe,EAAE,SAAS;gBAAExB,KAAK,EAAE,OAAO;gBAAEqH,YAAY,EAAE;cAAG,CAAE;cACxEJ,OAAO,EAAEA,CAAA,KAAM;gBAAE,IAAI,CAACtI,WAAW,GAAG,KAAK;gBAAEnB,SAAS,CAAC,eAAe,CAAC;gBAAE,IAAI,CAAC4E,kBAAkB,CAAC,CAAC;cAAE,CAAE;cAAAtC,QAAA,EACrG;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNjF,OAAA,CAACR,WAAW;YAACiF,SAAS,EAAC,SAAS;YAAAE,QAAA,eAC9B3E,OAAA;cAAA2E,QAAA,gBACE3E,OAAA;gBACEyE,SAAS,EAAC,8BAA8B;gBACxCG,KAAK,EAAE;kBACL4I,eAAe,EACb,iDAAiD;kBACnDtB,YAAY,EAAE,yBAAyB;kBACvCzF,KAAK,EAAE,MAAM;kBACbgH,YAAY,EAAE,iBAAiB;kBAC/BC,UAAU,EAAE,iBAAiB;kBAC7B7I,KAAK,EAAE;gBACT,CAAE;gBAAAF,QAAA,EAEDkF,QAAQ,CAACV,MAAM,CAACF,QAAQ,CAAC,CAAC,GACzB;cAAkC;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC,eACLjF,OAAA;gBAAKyE,SAAS,EAAC,kBAAkB;gBAACG,KAAK,EAAE;kBAAE+I,MAAM,EAAE;gBAAE,CAAE;gBAAAhJ,QAAA,eACrD3E,OAAA,CAAC4N,MAAM;kBAACvI,OAAO,EAAC,GAAG;kBAACyB,OAAO,EAAE+C;gBAAS;kBAAA/E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACdjF,OAAA;YAAG4E,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAAAF,QAAA,EAAC;UAQ9B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJjF,OAAA,CAACR,WAAW;YAACiF,SAAS,EAAC,SAAS;YAAAE,QAAA,eAC9B3E,OAAA;cAAA2E,QAAA,gBACE3E,OAAA;gBACEyE,SAAS,EAAC,8BAA8B;gBACxCG,KAAK,EAAE;kBACLyB,eAAe,EAAE,SAAS;kBAC1B6F,YAAY,EAAE,OAAO;kBACrBuB,YAAY,EAAE,iBAAiB;kBAC/BC,UAAU,EAAE,iBAAiB;kBAC7BjH,KAAK,EAAE,MAAM;kBACb5B,KAAK,EAAE;gBACT,CAAE;gBAAAF,QAAA,EACH;cAED;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLjF,OAAA;gBAAKyE,SAAS,EAAC,kBAAkB;gBAACG,KAAK,EAAE;kBAAE+I,MAAM,EAAE;gBAAE,CAAE;gBAAAhJ,QAAA,eACrD3E,OAAA;kBAAK4E,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAE;kBAAAF,QAAA,gBAC7B3E,OAAA;oBAAA2E,QAAA,EAAQ;kBAAe;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChCjF,OAAA;oBAAA2E,QAAA,EACGkJ,KAAK,CAAC/K,IAAI,CAAC;sBAAEqG,MAAM,EAAE;oBAAG,CAAC,EAAE,CAAC2E,CAAC,EAAEjD,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACkD,GAAG,CAAEpD,CAAC,IAAK;sBAAA,IAAAqD,kBAAA,EAAAC,WAAA;sBACtD,MAAMC,CAAC,IAAAF,kBAAA,IAAAC,WAAA,GAAItE,QAAQ,CAACgB,CAAC,CAAC,cAAAsD,WAAA,uBAAXA,WAAA,CAAa9E,MAAM,cAAA6E,kBAAA,cAAAA,kBAAA,GAAI,CAAE;sBACpC,oBACEhO,OAAA;wBAAM4E,KAAK,EAAE;0BAAEuJ,WAAW,EAAE;wBAAQ,CAAE;wBAAAxJ,QAAA,GAAC,GAAC,EAACgG,CAAC,EAAC,IAAE,EAACuD,CAAC,EAAC,IAAE;sBAAA;wBAAApJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAE7D,CAAC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACNjF,OAAA;oBAAA2E,QAAA,EAAQ;kBAAoB;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACrCjF,OAAA;oBAAA2E,QAAA,EACGkJ,KAAK,CAAC/K,IAAI,CAAC;sBAAEqG,MAAM,EAAE;oBAAG,CAAC,EAAE,CAAC2E,CAAC,EAAEjD,CAAC,KAAKA,CAAC,GAAG,EAAE,CAAC,CAACkD,GAAG,CAAEpD,CAAC,IAAK;sBAAA,IAAAyD,mBAAA,EAAAC,YAAA;sBACvD,MAAMH,CAAC,IAAAE,mBAAA,IAAAC,YAAA,GAAI1E,QAAQ,CAACgB,CAAC,CAAC,cAAA0D,YAAA,uBAAXA,YAAA,CAAalF,MAAM,cAAAiF,mBAAA,cAAAA,mBAAA,GAAI,CAAE;sBACpC,oBACEpO,OAAA;wBAAM4E,KAAK,EAAE;0BAAEuJ,WAAW,EAAE;wBAAQ,CAAE;wBAAAxJ,QAAA,GAAC,GAAC,EAACgG,CAAC,EAAC,IAAE,EAACuD,CAAC,EAAC,IAAE;sBAAA;wBAAApJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAE7D,CAAC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACNjF,OAAA;oBAAK4E,KAAK,EAAE;sBAAEwI,SAAS,EAAE;oBAAE,CAAE;oBAAAzI,QAAA,GAAC,oBAAkB,EAACkF,QAAQ,CAACV,MAAM;kBAAA;oBAAArE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AACA,MAAMqI,cAAc,SAAS5N,SAAS,CAAC;EACrCyD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC0D,OAAO,GAAG1D,KAAK,CAAC0D,OAAO;IAC5B,IAAI,CAACyG,WAAW,GAAGnK,KAAK,CAACmK,WAAW;EACtC;EAEA/I,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEsC,OAAO;MAAEyG;IAAY,CAAC,GAAG,IAAI;IAErC,MAAMe,MAAM,GAAGf,WAAW,GAAG,mBAAmB,GAAG,mBAAmB;IAEtE,MAAMgB,MAAM,GAAGhB,WAAW,GAAG,iBAAiB,GAAG,OAAO;IAExD,oBACEvN,OAAA,CAACR,WAAW;MAACiF,SAAS,EAAC,SAAS;MAAAE,QAAA,EAC7BmC,OAAO,CAACiH,GAAG,CAACS,IAAA;QAAA,IAAC,CAACC,GAAG,EAAEC,IAAI,CAAC,GAAAF,IAAA;QAAA,oBACvBxO,OAAA;UAAA2E,QAAA,gBACE3E,OAAA;YACEyE,SAAS,EAAC,8BAA8B;YACxCG,KAAK,EACH2I,WAAW,GACP;cACEC,eAAe,EACb,mDAAmD;cACrDtB,YAAY,EAAE,yBAAyB;cACvCuB,YAAY,EAAE,iBAAiB;cAC/BC,UAAU,EAAE,iBAAiB;cAC7BjH,KAAK,EAAE;YACT,CAAC,GACD;cACEJ,eAAe,EAAE,SAAS;cAC1B6F,YAAY,EAAE,yBAAyB;cACvCuB,YAAY,EAAE,iBAAiB;cAC/BC,UAAU,EAAE,iBAAiB;cAC7BjH,KAAK,EAAE;YACT,CACL;YAAA9B,QAAA,EAEA4J,MAAM,IACJhB,WAAW,GAAG,CAACkB,GAAG,GAAG,EAAE,EAAExF,QAAQ,CAAC,CAAC,GAAGwF,GAAG,CAAC,GAC3C,IAAI,GACJC,IAAI,CAACvF,MAAM,CAACF,QAAQ,CAAC,CAAC,GACtBqF;UAAM;YAAAxJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACLjF,OAAA;YAAKyE,SAAS,EAAC,kBAAkB;YAACG,KAAK,EAAE;cAAE+I,MAAM,EAAE;YAAE,CAAE;YAAAhJ,QAAA,eACrD3E,OAAA,CAAC4N,MAAM;cAAC9G,OAAO,EAAE4H,IAAK;cAACrJ,OAAO,EAAEoJ;YAAI;cAAA3J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAElB;AACF;AACA,MAAM2I,MAAM,SAASlO,SAAS,CAAC;EAC7ByD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC0D,OAAO,GAAG1D,KAAK,CAAC0D,OAAO;IAC5B,IAAI,CAACzB,OAAO,GAAGjC,KAAK,CAACiC,OAAO;EAC9B;EAEAb,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEsC,OAAO;MAAEzB;IAAQ,CAAC,GAAG,IAAI;IACjC,oBACErF,OAAA,CAACV,GAAG;MAACmF,SAAS,EAAC,SAAS;MAAAE,QAAA,EACrBmC,OAAO,CAACiH,GAAG,CAAErJ,EAAE,iBACd1E,OAAA,CAACmF,OAAO;QAENC,KAAK,EAAEV,EAAG;QACV0B,KAAK,EAAE,OAAO,GAAG1B,EAAE,CAACuE,QAAQ,CAAC,CAAE;QAC/B5D,OAAO,EAAEA;MAAQ,GAHZX,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,MAAM0J,GAAG,SAASjP,SAAS,CAAC;EAC1ByD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXwD,IAAI,EAAE5F,SAAS;MACf2N,GAAG,EAAE3N,SAAS;MACd4N,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,CAAC;MACdC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;IACd,CAAC;EACH;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAIC,IAAI,GAAG,KAAK;IAChB,MAAM;MAAEN;IAAI,CAAC,GAAG,IAAI,CAACvL,KAAK;IAE1B,IAAI,CAACuL,GAAG,EAAE;MACR,IAAI,CAACO,SAAS,CACZ,iBAAiB,EACjB,kDACF,CAAC;MACD;IACF;IAEA,IAAID,IAAI,EAAE;MACR;IACF;IAEAA,IAAI,GAAG,IAAI;IAEX,IAAI;MACF,MAAMN,GAAG,CAACjM,OAAO,CAAC;QAChBC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE,CAAC;UAAEI,OAAO,EAAE;QAAO,CAAC;MAC9B,CAAC,CAAC;MAEF,MAAMmM,IAAI,GAAG,MAAMR,GAAG,CAACjM,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjE,IAAI,CAACoB,QAAQ,CAAC;QAAE6C,IAAI,EAAEuI,IAAI,CAAC,CAAC;MAAE,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,IAAI,CAACF,SAAS,CAAC,yBAAyB,EAAE,2BAA2B,CAAC;MACtE;IACF,CAAC,SAAS;MACRD,IAAI,GAAG,KAAK;IACd;IACA,IAAI,CAACC,SAAS,CACZ,mBAAmB,EACnB,6JACF,CAAC;EACH;EAEAA,SAASA,CAACrL,MAAM,EAAEC,IAAI,EAAE;IACtB,IAAI,CAACC,QAAQ,CAAC;MAAE+K,SAAS,EAAE;IAAK,CAAC,CAAC;IAClC1N,WAAW,CAACqC,IAAI,CAACI,MAAM,EAAEC,IAAI,CAAC;EAChC;EAEAN,iBAAiBA,CAAA,EAAG;IAAA,IAAA6L,mBAAA;IAClB;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIjN,QAAQ,aAARA,QAAQ,gBAAAgN,mBAAA,GAARhN,QAAQ,CAAEuM,SAAS,cAAAS,mBAAA,eAAnBA,mBAAA,CAAqBnG,MAAM,EAAE;MAC/B,KAAK,MAAMqG,CAAC,IAAIlN,QAAQ,CAACuM,SAAS,EAAEU,KAAK,CAACjH,IAAI,CAACkH,CAAC,CAAC;IACnD,CAAC,MAAM,IAAIlN,QAAQ,EAAE;MACnBiN,KAAK,CAACjH,IAAI,CAAChG,QAAQ,CAAC;IACtB;IACA,MAAMmN,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC;IACrB,IAAI,CAACvL,QAAQ,CAAC;MAAE6K,SAAS,EAAEU,KAAK;MAAEX,GAAG,EAAEa;IAAK,CAAC,CAAC;IAC9C,IAAIA,IAAI,EAAE;MACRA,IAAI,CAACC,EAAE,CAAC,iBAAiB,EAAGC,QAAQ,IAAK;QACvC,IAAI,CAAC3L,QAAQ,CAAC;UAAE6C,IAAI,EAAE8I,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC;QAAE,CAAC,CAAC;MACxC,CAAC,CAAC;MACF,MAAMC,KAAK,GAAGH,IAAI,CAAC1M,eAAe;MAClC,IAAI6M,KAAK,EAAE,IAAI,CAAC5L,QAAQ,CAAC;QAAE6C,IAAI,EAAE+I;MAAM,CAAC,CAAC;IAC3C;EACF;EAEAnG,oBAAoBA,CAAA,EAAG;IACrB,MAAM;MAAEmF;IAAI,CAAC,GAAG,IAAI,CAACvL,KAAK;IAC1B,IAAIuL,GAAG,EAAEA,GAAG,CAACiB,kBAAkB,CAAC,iBAAiB,CAAC;EACpD;EAEArL,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEqC,IAAI;MAAEkI,SAAS;MAAEC,UAAU;MAAEH,SAAS;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACzL,KAAK;IAC1E,MAAMyM,OAAO,GAAIC,CAAC,IAAMA,CAAC,GAAGA,CAAC,CAACpK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGoK,CAAC,CAACpK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAG;IACnE,MAAMqK,SAAS,GAAG,IAAI,CAAChM,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;IAC1C,oBACE5D,OAAA;MAAK4E,KAAK,EAAE;QAAEqL,SAAS,EAAE;MAAQ,CAAE;MAAAtL,QAAA,gBACjC3E,OAAA,CAACkD,YAAY;QAAC0B,KAAK,EAAE;UAAEsL,MAAM,EAAE;QAAE,CAAE;QAACC,MAAM,EAAEpB;MAAU;QAAAjK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzDjF,OAAA;QAAKyE,SAAS,EAAC,YAAY;QAAAE,QAAA,gBACzB3E,OAAA;UAAA2E,QAAA,eACE3E,OAAA;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjF,OAAA,CAACV,GAAG;UAAAqF,QAAA,gBACF3E,OAAA;YACEwG,GAAG,EAAC,oBAAoB;YACxBD,GAAG,EAAC,eAAe;YACnB9B,SAAS,EAAC;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,EACD4B,IAAI,gBACH7G,OAAA;YAAKyE,SAAS,EAAC,iBAAiB;YAACG,KAAK,EAAE;cAAE8B,OAAO,EAAE,MAAM;cAAE6E,UAAU,EAAE,QAAQ;cAAE8B,cAAc,EAAE,UAAU;cAAE1B,GAAG,EAAE;YAAE,CAAE;YAAAhH,QAAA,gBACpH3E,OAAA;cAAM4E,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAQ,CAAE;cAAAF,QAAA,EAAEmL,OAAO,CAACjJ,IAAI;YAAC;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvDjF,OAAA;cACEwG,GAAG,EAAC,UAAU;cACdD,GAAG,EAAC,YAAY;cAChB3B,KAAK,EAAE;gBAAE6B,KAAK,EAAE,EAAE;gBAAE2J,MAAM,EAAE,EAAE;gBAAElJ,MAAM,EAAE;cAAU,CAAE;cACpD4E,OAAO,EAAEA,CAAA,KAAM;gBACb,MAAM;kBAAE8C;gBAAI,CAAC,GAAG,IAAI,CAACvL,KAAK;gBAC1B,IAAIuL,GAAG,EAAEA,GAAG,CAACiB,kBAAkB,CAAC,iBAAiB,CAAC;gBAClD,IAAI,CAAC7L,QAAQ,CAAC;kBAAE6C,IAAI,EAAE5F;gBAAU,CAAC,CAAC;cACpC;YAAE;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAENjF,OAAA;YAAKyE,SAAS,EAAC,kBAAkB;YAACG,KAAK,EAAE;cAAE8B,OAAO,EAAE,MAAM;cAAEiF,GAAG,EAAE,CAAC;cAAE0B,cAAc,EAAE;YAAW,CAAE;YAAA1I,QAAA,GAC9FkK,SAAS,CAAC1F,MAAM,GAAG,CAAC,iBACnBnJ,OAAA;cACEyE,SAAS,EAAC,iBAAiB;cAC3BG,KAAK,EAAE;gBAAEyL,QAAQ,EAAE;cAAI,CAAE;cACzBlE,KAAK,EAAE2C,WAAY;cACnBwB,QAAQ,EAAGnK,CAAC,IAAK;gBACf,MAAMoK,GAAG,GAAGvH,QAAQ,CAAC7C,CAAC,CAACwC,MAAM,CAACwD,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC;gBAC7C,MAAMqD,CAAC,GAAGX,SAAS,CAAC0B,GAAG,CAAC;gBACxB,IAAI,CAACvM,QAAQ,CAAC;kBAAE8K,WAAW,EAAEyB,GAAG;kBAAE3B,GAAG,EAAEY;gBAAE,CAAC,CAAC;cAC7C,CAAE;cAAA7K,QAAA,EAEDkK,SAAS,CAACd,GAAG,CAAC,CAACyB,CAAC,EAAE3E,CAAC,kBAClB7K,OAAA;gBAAgBmM,KAAK,EAAEtB,CAAE;gBAAAlG,QAAA,EACtB6K,CAAC,CAACgB,UAAU,GAAG,UAAU,GAAGhB,CAAC,CAACiB,gBAAgB,GAAG,UAAU,GAAG,WAAW,IAAI5F,CAAC,GAAG,CAAC;cAAC,GADzEA,CAAC;gBAAA/F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEN,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CACT,eACDjF,OAAA,CAACX,MAAM;cAACyM,OAAO,EAAE,IAAI,CAACmD,aAAa,CAACrL,IAAI,CAAC,IAAI,CAAE;cAAC8M,KAAK,EAAC,OAAO;cAACzM,IAAI,EAAC,QAAQ;cAAAU,QAAA,EAAC;YAE5E;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,EACA4B,IAAI,iBACH7G,OAAA,CAACX,MAAM;YACLqR,KAAK,EAAC,OAAO;YACbzM,IAAI,EAAC,QAAQ;YACbQ,SAAS,EAAC,iBAAiB;YAC3BkM,MAAM,EAAE;cAAEjK,OAAO,EAAE;YAAe,CAAE;YACpCoF,OAAO,EAAE,SAAAA,CAAA,EAAY;cACnBkE,SAAS,CAAC;gBAAEhB,UAAU,EAAE,CAACA;cAAW,CAAC,CAAC;YACxC,CAAE;YAAArK,QAAA,EAEDqK,UAAU,GAAG,WAAW,GAAG;UAAM;YAAAlK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACL+J,UAAU,gBACThP,OAAA,CAACL,aAAa;UACZiR,YAAY,EAAE,CAAC/J,IAAK;UACpBsI,SAAS,EAAE,IAAI,CAACA,SAAS,CAACvL,IAAI,CAAC,IAAI;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,GACf4B,IAAI,gBACN7G,OAAA,CAAC2G,OAAO;UAACE,IAAI,EAAEA;QAAK;UAAA/B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,gBAE/BjF,OAAA;UAAKyE,SAAS,EAAC;QAAwB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAe0J,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}